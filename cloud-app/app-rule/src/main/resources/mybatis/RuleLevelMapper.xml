<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.union.aimei.rule.mapper.RuleLevelMapper" >
  <resultMap id="BaseResultMap" type="com.union.aimei.common.model.rule.RuleLevel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="level_code" property="levelCode" jdbcType="VARCHAR" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="level_logo" property="levelLogo" jdbcType="VARCHAR" />
    <result column="start_level_value" property="startLevelValue" jdbcType="INTEGER" />
    <result column="end_level_value" property="endLevelValue" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_enabled" property="isEnabled" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, item_id, level_code, level_name, level_logo, start_level_value, end_level_value, 
    sort, is_enabled, create_time, update_time
  </sql>

  <sql id="BaseAliasColumn" >
    id, item_id AS itemId, level_code AS levelCode, level_name AS levelName, level_logo AS levelLogo, 
    start_level_value AS startLevelValue, end_level_value AS endLevelValue, sort, is_enabled AS isEnabled, 
    create_time AS createTime, update_time AS updateTime
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rule_level
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rule_level
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.union.aimei.common.model.rule.RuleLevel" useGeneratedKeys="true" keyProperty="id" >
    insert into rule_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="levelCode != null" >
        level_code,
      </if>
      <if test="levelName != null" >
        level_name,
      </if>
      <if test="levelLogo != null" >
        level_logo,
      </if>
      <if test="startLevelValue != null" >
        start_level_value,
      </if>
      <if test="endLevelValue != null" >
        end_level_value,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="levelCode != null" >
        #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null" >
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="levelLogo != null" >
        #{levelLogo,jdbcType=VARCHAR},
      </if>
      <if test="startLevelValue != null" >
        #{startLevelValue,jdbcType=INTEGER},
      </if>
      <if test="endLevelValue != null" >
        #{endLevelValue,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.rule.RuleLevel" >
    update rule_level
    <set >
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="levelCode != null" >
        level_code = #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="levelLogo != null" >
        level_logo = #{levelLogo,jdbcType=VARCHAR},
      </if>
      <if test="startLevelValue != null" >
        start_level_value = #{startLevelValue,jdbcType=INTEGER},
      </if>
      <if test="endLevelValue != null" >
        end_level_value = #{endLevelValue,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectListByConditions" parameterType="com.union.aimei.common.model.rule.RuleLevel" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/> from rule_level
    <where >
      <if test="itemId != null" >
        AND item_id = #{itemId,jdbcType=INTEGER}
      </if>
      <if test="levelCode != null" >
        AND level_code = #{levelCode,jdbcType=VARCHAR}
      </if>
      <if test="levelName != null" >
        AND level_name = #{levelName,jdbcType=VARCHAR}
      </if>
      <if test="levelLogo != null" >
        AND level_logo = #{levelLogo,jdbcType=VARCHAR}
      </if>
      <if test="startLevelValue != null" >
        AND start_level_value = #{startLevelValue,jdbcType=INTEGER}
      </if>
      <if test="endLevelValue != null" >
        AND end_level_value = #{endLevelValue,jdbcType=INTEGER}
      </if>
      <if test="sort != null" >
        AND sort = #{sort,jdbcType=INTEGER}
      </if>
      <if test="isEnabled != null" >
        AND is_enabled = #{isEnabled,jdbcType=BIT}
      </if>
      <if test="createTime != null" >
        AND create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null" >
        AND update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    <choose >
      <when test="sort != null" >
        ORDER BY sort
      </when>
      <otherwise >
        ORDER BY create_time DESC
      </otherwise>
    </choose>
  </select>

</mapper>