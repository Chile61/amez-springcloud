<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.system.mapper.BaseSmsHistoryMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.system.BaseSmsHistory">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="sms_name" jdbcType="VARCHAR" property="smsName"/>
        <result column="sms_code" jdbcType="VARCHAR" property="smsCode"/>
        <result column="sms_template" jdbcType="VARCHAR" property="smsTemplate"/>
        <result column="sms_content" jdbcType="VARCHAR" property="smsContent"/>
        <result column="sms_type" jdbcType="TINYINT" property="smsType"/>
        <result column="receive_phone" jdbcType="VARCHAR" property="receivePhone"/>
        <result column="send_time" jdbcType="TIMESTAMP" property="sendTime"/>
        <result column="response_message" jdbcType="VARCHAR" property="responseMessage"/>
        <result column="response_code" jdbcType="VARCHAR" property="responseCode"/>
        <result column="RequestId" jdbcType="VARCHAR" property="requestid"/>
        <result column="BizId" jdbcType="VARCHAR" property="bizid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, sms_name, sms_code, sms_template, sms_content, sms_type, receive_phone, send_time,
        response_message, response_code, RequestId, BizId
    </sql>
    <select id="selectByExample" parameterType="com.union.aimei.common.model.system.BaseSmsHistoryExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_sms_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_sms_history
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from base_sms_history
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.union.aimei.common.model.system.BaseSmsHistoryExample">
        delete from base_sms_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.union.aimei.common.model.system.BaseSmsHistory">
        insert into base_sms_history (id, sms_name, sms_code,
        sms_template, sms_content, sms_type,
        receive_phone, send_time, response_message,
        response_code, RequestId, BizId
        )
        values (#{id,jdbcType=INTEGER}, #{smsName,jdbcType=VARCHAR}, #{smsCode,jdbcType=VARCHAR},
        #{smsTemplate,jdbcType=VARCHAR}, #{smsContent,jdbcType=VARCHAR}, #{smsType,jdbcType=TINYINT},
        #{receivePhone,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{responseMessage,jdbcType=VARCHAR},
        #{responseCode,jdbcType=VARCHAR}, #{requestid,jdbcType=VARCHAR}, #{bizid,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.union.aimei.common.model.system.BaseSmsHistory">
        insert into base_sms_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="smsName != null">
                sms_name,
            </if>
            <if test="smsCode != null">
                sms_code,
            </if>
            <if test="smsTemplate != null">
                sms_template,
            </if>
            <if test="smsContent != null">
                sms_content,
            </if>
            <if test="smsType != null">
                sms_type,
            </if>
            <if test="receivePhone != null">
                receive_phone,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="responseMessage != null">
                response_message,
            </if>
            <if test="responseCode != null">
                response_code,
            </if>
            <if test="requestid != null">
                RequestId,
            </if>
            <if test="bizid != null">
                BizId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="smsName != null">
                #{smsName,jdbcType=VARCHAR},
            </if>
            <if test="smsCode != null">
                #{smsCode,jdbcType=VARCHAR},
            </if>
            <if test="smsTemplate != null">
                #{smsTemplate,jdbcType=VARCHAR},
            </if>
            <if test="smsContent != null">
                #{smsContent,jdbcType=VARCHAR},
            </if>
            <if test="smsType != null">
                #{smsType,jdbcType=TINYINT},
            </if>
            <if test="receivePhone != null">
                #{receivePhone,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="responseMessage != null">
                #{responseMessage,jdbcType=VARCHAR},
            </if>
            <if test="responseCode != null">
                #{responseCode,jdbcType=VARCHAR},
            </if>
            <if test="requestid != null">
                #{requestid,jdbcType=VARCHAR},
            </if>
            <if test="bizid != null">
                #{bizid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.union.aimei.common.model.system.BaseSmsHistoryExample"
            resultType="java.lang.Long">
        select count(*) from base_sms_history
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update base_sms_history
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.smsName != null">
                sms_name = #{record.smsName,jdbcType=VARCHAR},
            </if>
            <if test="record.smsCode != null">
                sms_code = #{record.smsCode,jdbcType=VARCHAR},
            </if>
            <if test="record.smsTemplate != null">
                sms_template = #{record.smsTemplate,jdbcType=VARCHAR},
            </if>
            <if test="record.smsContent != null">
                sms_content = #{record.smsContent,jdbcType=VARCHAR},
            </if>
            <if test="record.smsType != null">
                sms_type = #{record.smsType,jdbcType=TINYINT},
            </if>
            <if test="record.receivePhone != null">
                receive_phone = #{record.receivePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.sendTime != null">
                send_time = #{record.sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.responseMessage != null">
                response_message = #{record.responseMessage,jdbcType=VARCHAR},
            </if>
            <if test="record.responseCode != null">
                response_code = #{record.responseCode,jdbcType=VARCHAR},
            </if>
            <if test="record.requestid != null">
                RequestId = #{record.requestid,jdbcType=VARCHAR},
            </if>
            <if test="record.bizid != null">
                BizId = #{record.bizid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update base_sms_history
        set id = #{record.id,jdbcType=INTEGER},
        sms_name = #{record.smsName,jdbcType=VARCHAR},
        sms_code = #{record.smsCode,jdbcType=VARCHAR},
        sms_template = #{record.smsTemplate,jdbcType=VARCHAR},
        sms_content = #{record.smsContent,jdbcType=VARCHAR},
        sms_type = #{record.smsType,jdbcType=TINYINT},
        receive_phone = #{record.receivePhone,jdbcType=VARCHAR},
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
        response_message = #{record.responseMessage,jdbcType=VARCHAR},
        response_code = #{record.responseCode,jdbcType=VARCHAR},
        RequestId = #{record.requestid,jdbcType=VARCHAR},
        BizId = #{record.bizid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.system.BaseSmsHistory">
        update base_sms_history
        <set>
            <if test="smsName != null">
                sms_name = #{smsName,jdbcType=VARCHAR},
            </if>
            <if test="smsCode != null">
                sms_code = #{smsCode,jdbcType=VARCHAR},
            </if>
            <if test="smsTemplate != null">
                sms_template = #{smsTemplate,jdbcType=VARCHAR},
            </if>
            <if test="smsContent != null">
                sms_content = #{smsContent,jdbcType=VARCHAR},
            </if>
            <if test="smsType != null">
                sms_type = #{smsType,jdbcType=TINYINT},
            </if>
            <if test="receivePhone != null">
                receive_phone = #{receivePhone,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="responseMessage != null">
                response_message = #{responseMessage,jdbcType=VARCHAR},
            </if>
            <if test="responseCode != null">
                response_code = #{responseCode,jdbcType=VARCHAR},
            </if>
            <if test="requestid != null">
                RequestId = #{requestid,jdbcType=VARCHAR},
            </if>
            <if test="bizid != null">
                BizId = #{bizid,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.system.BaseSmsHistory">
        update base_sms_history
        set sms_name = #{smsName,jdbcType=VARCHAR},
        sms_code = #{smsCode,jdbcType=VARCHAR},
        sms_template = #{smsTemplate,jdbcType=VARCHAR},
        sms_content = #{smsContent,jdbcType=VARCHAR},
        sms_type = #{smsType,jdbcType=TINYINT},
        receive_phone = #{receivePhone,jdbcType=VARCHAR},
        send_time = #{sendTime,jdbcType=TIMESTAMP},
        response_message = #{responseMessage,jdbcType=VARCHAR},
        response_code = #{responseCode,jdbcType=VARCHAR},
        RequestId = #{requestid,jdbcType=VARCHAR},
        BizId = #{bizid,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_sms_history LIMIT #{offset},#{limit}
    </select>
    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.system.BaseSmsHistory"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_sms_history
        <where>
            <if test="smsName != null">
                and sms_name = #{smsName,jdbcType=VARCHAR}
            </if>
            <if test="smsCode != null">
                and sms_code = #{smsCode,jdbcType=VARCHAR}
            </if>
            <if test="smsTemplate != null">
                and sms_template = #{smsTemplate,jdbcType=VARCHAR}
            </if>
            <if test="smsContent != null">
                and sms_content = #{smsContent,jdbcType=VARCHAR}
            </if>
            <if test="smsType != null">
                and sms_type = #{smsType,jdbcType=TINYINT}
            </if>
            <if test="receivePhone != null">
                and receive_phone = #{receivePhone,jdbcType=VARCHAR}
            </if>
            <if test="sendTime != null">
                and send_time = #{sendTime,jdbcType=TIMESTAMP}
            </if>
            <if test="responseMessage != null">
                and response_message = #{responseMessage,jdbcType=VARCHAR}
            </if>
            <if test="responseCode != null">
                and response_code = #{responseCode,jdbcType=VARCHAR}
            </if>
            <if test="requestid != null">
                and RequestId = #{requestid,jdbcType=VARCHAR}
            </if>
            <if test="bizid != null">
                and BizId = #{bizid,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>