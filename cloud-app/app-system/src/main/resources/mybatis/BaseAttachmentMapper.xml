<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.union.aimei.system.mapper.BaseAttachmentMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.system.BaseAttachment">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="file_path" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="file_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="file_rename" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="file_suffix" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="file_size" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="file_url" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="file_save_des" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, file_path, file_name, file_rename, file_suffix, file_size, file_url, file_save_des,
        create_time, update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.union.aimei.common.model.system.BaseAttachmentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from base_attachment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from base_attachment
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.union.aimei.common.model.system.BaseAttachmentExample">
        delete from base_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.union.aimei.common.model.system.BaseAttachment">
        insert into base_attachment (id, file_path, file_name,
        file_rename, file_suffix, file_size,
        file_url, file_save_des, create_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{filePath,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR},
        #{fileRename,jdbcType=VARCHAR}, #{fileSuffix,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE},
        #{fileUrl,jdbcType=VARCHAR}, #{fileSaveDes,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.union.aimei.common.model.system.BaseAttachment">
        insert into base_attachment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileRename != null">
                file_rename,
            </if>
            <if test="fileSuffix != null">
                file_suffix,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileSaveDes != null">
                file_save_des,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileRename != null">
                #{fileRename,jdbcType=VARCHAR},
            </if>
            <if test="fileSuffix != null">
                #{fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=DOUBLE},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileSaveDes != null">
                #{fileSaveDes,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.union.aimei.common.model.system.BaseAttachmentExample"
            resultType="java.lang.Integer">
        select count(*) from base_attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update base_attachment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.filePath != null">
                file_path = #{record.filePath,jdbcType=VARCHAR},
            </if>
            <if test="record.fileName != null">
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.fileRename != null">
                file_rename = #{record.fileRename,jdbcType=VARCHAR},
            </if>
            <if test="record.fileSuffix != null">
                file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="record.fileSize != null">
                file_size = #{record.fileSize,jdbcType=DOUBLE},
            </if>
            <if test="record.fileUrl != null">
                file_url = #{record.fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.fileSaveDes != null">
                file_save_des = #{record.fileSaveDes,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update base_attachment
        set id = #{record.id,jdbcType=INTEGER},
        file_path = #{record.filePath,jdbcType=VARCHAR},
        file_name = #{record.fileName,jdbcType=VARCHAR},
        file_rename = #{record.fileRename,jdbcType=VARCHAR},
        file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
        file_size = #{record.fileSize,jdbcType=DOUBLE},
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
        file_save_des = #{record.fileSaveDes,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.system.BaseAttachment">
        update base_attachment
        <set>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileRename != null">
                file_rename = #{fileRename,jdbcType=VARCHAR},
            </if>
            <if test="fileSuffix != null">
                file_suffix = #{fileSuffix,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=DOUBLE},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileSaveDes != null">
                file_save_des = #{fileSaveDes,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.system.BaseAttachment">
        update base_attachment
        set file_path = #{filePath,jdbcType=VARCHAR},
        file_name = #{fileName,jdbcType=VARCHAR},
        file_rename = #{fileRename,jdbcType=VARCHAR},
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
        file_size = #{fileSize,jdbcType=DOUBLE},
        file_url = #{fileUrl,jdbcType=VARCHAR},
        file_save_des = #{fileSaveDes,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>