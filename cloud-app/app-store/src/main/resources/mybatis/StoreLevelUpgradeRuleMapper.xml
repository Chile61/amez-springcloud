<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.union.aimei.store.mapper.StoreLevelUpgradeRuleMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.store.StoreLevelUpgradeRule">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="level_upgrade_type" property="levelUpgradeType" jdbcType="CHAR"/>
        <result column="level_upgrade_condition" property="levelUpgradeCondition" jdbcType="INTEGER"/>
        <result column="level_upgrade_value" property="levelUpgradeValue" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="is_enabled" property="isEnabled" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, level_upgrade_type, level_upgrade_condition, level_upgrade_value, sort, is_enabled, 
    create_time, update_time
  </sql>

    <sql id="BaseAliasColumn">
    id, level_upgrade_type AS levelUpgradeType, level_upgrade_condition AS levelUpgradeCondition, 
    level_upgrade_value AS levelUpgradeValue, sort, is_enabled AS isEnabled, create_time AS createTime, 
    update_time AS updateTime
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from store_level_upgrade_rule
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_level_upgrade_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="com.union.aimei.common.model.store.StoreLevelUpgradeRule" useGeneratedKeys="true" keyProperty="id">
        insert into store_level_upgrade_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="levelUpgradeType != null">
                level_upgrade_type,
            </if>
            <if test="levelUpgradeCondition != null">
                level_upgrade_condition,
            </if>
            <if test="levelUpgradeValue != null">
                level_upgrade_value,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="isEnabled != null">
                is_enabled,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="levelUpgradeType != null">
                #{levelUpgradeType,jdbcType=CHAR},
            </if>
            <if test="levelUpgradeCondition != null">
                #{levelUpgradeCondition,jdbcType=INTEGER},
            </if>
            <if test="levelUpgradeValue != null">
                #{levelUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="isEnabled != null">
                #{isEnabled,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.store.StoreLevelUpgradeRule">
        update store_level_upgrade_rule
        <set>
            <if test="levelUpgradeType != null">
                level_upgrade_type = #{levelUpgradeType,jdbcType=CHAR},
            </if>
            <if test="levelUpgradeCondition != null">
                level_upgrade_condition = #{levelUpgradeCondition,jdbcType=INTEGER},
            </if>
            <if test="levelUpgradeValue != null">
                level_upgrade_value = #{levelUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="isEnabled != null">
                is_enabled = #{isEnabled,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.store.StoreLevelUpgradeRule" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from store_level_upgrade_rule
        <where>
            <if test="levelUpgradeType != null">
                AND level_upgrade_type = #{levelUpgradeType,jdbcType=CHAR}
            </if>
            <if test="levelUpgradeCondition != null">
                AND level_upgrade_condition = #{levelUpgradeCondition,jdbcType=INTEGER}
            </if>
            <if test="levelUpgradeValue != null">
                AND level_upgrade_value = #{levelUpgradeValue,jdbcType=INTEGER}
            </if>
            <if test="sort != null">
                AND sort = #{sort,jdbcType=INTEGER}
            </if>
            <if test="isEnabled != null">
                AND is_enabled = #{isEnabled,jdbcType=BIT}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="sort != null">
                ORDER BY sort
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <delete id="deleteForAll" parameterType="java.lang.Integer">
    delete from store_level_upgrade_rule
  </delete>

</mapper>