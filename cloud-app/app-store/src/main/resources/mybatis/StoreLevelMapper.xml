<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.union.aimei.store.mapper.StoreLevelMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.store.StoreLevel">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="level_name" property="levelName" jdbcType="VARCHAR"/>
        <result column="level_logo" property="levelLogo" jdbcType="VARCHAR"/>
        <result column="begin_upgrade_value" property="beginUpgradeValue" jdbcType="INTEGER"/>
        <result column="end_upgrade_value" property="endUpgradeValue" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="is_enabled" property="isEnabled" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, level_name, level_logo, begin_upgrade_value, end_upgrade_value, sort, is_enabled, 
    create_time, update_time
  </sql>

    <sql id="BaseAliasColumn">
    id, level_name AS levelName, level_logo AS levelLogo, begin_upgrade_value AS beginUpgradeValue, 
    end_upgrade_value AS endUpgradeValue, sort, is_enabled AS isEnabled, create_time AS createTime, 
    update_time AS updateTime
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from store_level
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_level
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="com.union.aimei.common.model.store.StoreLevel" useGeneratedKeys="true" keyProperty="id">
        insert into store_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="levelName != null">
                level_name,
            </if>
            <if test="levelLogo != null">
                level_logo,
            </if>
            <if test="beginUpgradeValue != null">
                begin_upgrade_value,
            </if>
            <if test="endUpgradeValue != null">
                end_upgrade_value,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="isEnabled != null">
                is_enabled,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="levelName != null">
                #{levelName,jdbcType=VARCHAR},
            </if>
            <if test="levelLogo != null">
                #{levelLogo,jdbcType=VARCHAR},
            </if>
            <if test="beginUpgradeValue != null">
                #{beginUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="endUpgradeValue != null">
                #{endUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="isEnabled != null">
                #{isEnabled,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.store.StoreLevel">
        update store_level
        <set>
            <if test="levelName != null">
                level_name = #{levelName,jdbcType=VARCHAR},
            </if>
            <if test="levelLogo != null">
                level_logo = #{levelLogo,jdbcType=VARCHAR},
            </if>
            <if test="beginUpgradeValue != null">
                begin_upgrade_value = #{beginUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="endUpgradeValue != null">
                end_upgrade_value = #{endUpgradeValue,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="isEnabled != null">
                is_enabled = #{isEnabled,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.store.StoreLevel" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from store_level
        <where>
            <if test="levelName != null">
                AND level_name = #{levelName,jdbcType=VARCHAR}
            </if>
            <if test="levelLogo != null">
                AND level_logo = #{levelLogo,jdbcType=VARCHAR}
            </if>
            <if test="beginUpgradeValue != null">
                AND begin_upgrade_value = #{beginUpgradeValue,jdbcType=INTEGER}
            </if>
            <if test="endUpgradeValue != null">
                AND end_upgrade_value = #{endUpgradeValue,jdbcType=INTEGER}
            </if>
            <if test="sort != null">
                AND sort = #{sort,jdbcType=INTEGER}
            </if>
            <if test="isEnabled != null">
                AND is_enabled = #{isEnabled,jdbcType=BIT}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        <choose>
            <when test="sort != null">
                ORDER BY sort
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <delete id="deleteForAll">
      delete from store_level
    </delete>

    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from store_level
        where is_enabled = true
        order by sort
    </select>

</mapper>