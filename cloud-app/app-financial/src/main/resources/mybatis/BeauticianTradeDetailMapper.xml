<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.financial.mapper.BeauticianTradeDetailMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.financial.BeauticianTradeDetail">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="store_id" jdbcType="INTEGER" property="storeId"/>
        <result column="amount_pay" jdbcType="INTEGER" property="amountPay"/>
        <result column="beautician_id" jdbcType="INTEGER" property="beauticianId"/>
        <result column="store_name" jdbcType="VARCHAR" property="storeName"/>
        <result column="beautician_name" jdbcType="VARCHAR" property="beauticianName"/>
        <result column="beautician_phone" jdbcType="VARCHAR" property="beauticianPhone"/>
        <result column="beautician_type" jdbcType="TINYINT" property="beauticianType"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="trade_type" jdbcType="INTEGER" property="tradeType"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_price" jdbcType="INTEGER" property="productPrice"/>
        <result column="subordinate_status" jdbcType="INTEGER" property="subordinateStatus"/>
        <result column="product_number" jdbcType="INTEGER" property="productNumber"/>
        <result column="platform_amount" jdbcType="INTEGER" property="platformAmount"/>
        <result column="store_amoun" jdbcType="INTEGER" property="storeAmoun"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="trade_status" jdbcType="INTEGER" property="tradeStatus"/>
        <result column="income" jdbcType="INTEGER" property="income"/>
        <result column="visit_amount" jdbcType="INTEGER" property="visitAmount"/>
        <result column="net_income" jdbcType="INTEGER" property="netIncome"/>
        <result column="pay_method" jdbcType="INTEGER" property="payMethod"/>
        <result column="pay_rate" jdbcType="INTEGER" property="payRate"/>
        <result column="settlement_time" jdbcType="TIMESTAMP" property="settlementTime"/>
        <result column="reimburse_amount" jdbcType="INTEGER" property="reimburseAmount"/>
        <result column="reimburse_time" jdbcType="TIMESTAMP" property="reimburseTime"/>
        <result column="withdraw_amount" jdbcType="INTEGER" property="withdrawAmount"/>
        <result column="taxation" jdbcType="INTEGER" property="taxation"/>
        <result column="actual_amount" jdbcType="INTEGER" property="actualAmount"/>
        <result column="bank_name" jdbcType="VARCHAR" property="bankName"/>
        <result column="bank_branch" jdbcType="VARCHAR" property="bankBranch"/>
        <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo"/>
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime"/>
        <result column="ready_play_amount_time" jdbcType="TIMESTAMP" property="readyPlayAmountTime"/>
        <result column="play_amount_time" jdbcType="TIMESTAMP" property="playAmountTime"/>
        <result column="play_amount_status" jdbcType="TINYINT" property="playAmountStatus"/>
        <result column="statistics_year" jdbcType="VARCHAR" property="statisticsYear"/>
        <result column="statistics_year_month" jdbcType="VARCHAR" property="statisticsYearMonth"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, store_id, beautician_id, store_name, beautician_name, beautician_phone, beautician_type,
        order_no, trade_type, product_name, product_price, product_number, platform_amount,
        store_amoun, pay_time, trade_status, income, visit_amount, net_income, pay_method,
        pay_rate, settlement_time, reimburse_amount, reimburse_time, withdraw_amount, taxation,
        actual_amount, bank_name, bank_branch, bank_card_no, add_time, ready_play_amount_time,
        play_amount_time, play_amount_status, statistics_year, statistics_year_month, create_time,
        update_time, remarks , amount_pay , subordinate_status
    </sql>
    <select id="selectByExample" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetailExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from beautician_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from beautician_trade_detail
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from beautician_trade_detail
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetailExample">
        delete from beautician_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetail">
        insert into beautician_trade_detail (id, store_id, beautician_id,
        store_name, beautician_name, beautician_phone,
        beautician_type, order_no, trade_type,
        product_name, product_price, product_number,
        platform_amount, store_amoun, pay_time,
        trade_status, income, visit_amount,
        net_income, pay_method, pay_rate,
        settlement_time, reimburse_amount, reimburse_time,
        withdraw_amount, taxation, actual_amount,
        bank_name, bank_branch, bank_card_no,
        add_time, ready_play_amount_time, play_amount_time,
        play_amount_status, statistics_year, statistics_year_month,
        create_time, update_time, remarks , amount_pay ,subordinate_status
        )
        values (#{id,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{beauticianId,jdbcType=INTEGER},
        #{storeName,jdbcType=VARCHAR}, #{beauticianName,jdbcType=VARCHAR}, #{beauticianPhone,jdbcType=VARCHAR},
        #{beauticianType,jdbcType=TINYINT}, #{orderNo,jdbcType=VARCHAR}, #{tradeType,jdbcType=INTEGER},
        #{productName,jdbcType=VARCHAR}, #{productPrice,jdbcType=INTEGER}, #{productNumber,jdbcType=INTEGER},
        #{platformAmount,jdbcType=INTEGER}, #{storeAmoun,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP},
        #{tradeStatus,jdbcType=INTEGER}, #{income,jdbcType=INTEGER}, #{visitAmount,jdbcType=INTEGER},
        #{netIncome,jdbcType=INTEGER}, #{payMethod,jdbcType=INTEGER}, #{payRate,jdbcType=INTEGER},
        #{settlementTime,jdbcType=TIMESTAMP}, #{reimburseAmount,jdbcType=INTEGER}, #{reimburseTime,jdbcType=TIMESTAMP},
        #{withdrawAmount,jdbcType=INTEGER}, #{taxation,jdbcType=INTEGER}, #{actualAmount,jdbcType=INTEGER},
        #{bankName,jdbcType=VARCHAR}, #{bankBranch,jdbcType=VARCHAR}, #{bankCardNo,jdbcType=VARCHAR},
        #{addTime,jdbcType=TIMESTAMP}, #{readyPlayAmountTime,jdbcType=TIMESTAMP}, #{playAmountTime,jdbcType=TIMESTAMP},
        #{playAmountStatus,jdbcType=TINYINT}, #{statisticsYear,jdbcType=VARCHAR}, #{statisticsYearMonth,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{amountPay,jdbcType=INTEGER}, #{subordinateStatus,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetail"
            useGeneratedKeys="true" keyProperty="id">
        insert into beautician_trade_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="beauticianId != null">
                beautician_id,
            </if>
            <if test="storeName != null">
                store_name,
            </if>
            <if test="beauticianName != null">
                beautician_name,
            </if>
            <if test="beauticianPhone != null">
                beautician_phone,
            </if>
            <if test="beauticianType != null">
                beautician_type,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="tradeType != null">
                trade_type,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="productNumber != null">
                product_number,
            </if>
            <if test="platformAmount != null">
                platform_amount,
            </if>
            <if test="storeAmoun != null">
                store_amoun,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="tradeStatus != null">
                trade_status,
            </if>
            <if test="income != null">
                income,
            </if>
            <if test="visitAmount != null">
                visit_amount,
            </if>
            <if test="netIncome != null">
                net_income,
            </if>
            <if test="payMethod != null">
                pay_method,
            </if>
            <if test="payRate != null">
                pay_rate,
            </if>
            <if test="settlementTime != null">
                settlement_time,
            </if>
            <if test="reimburseAmount != null">
                reimburse_amount,
            </if>
            <if test="reimburseTime != null">
                reimburse_time,
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount,
            </if>
            <if test="taxation != null">
                taxation,
            </if>
            <if test="actualAmount != null">
                actual_amount,
            </if>
            <if test="bankName != null">
                bank_name,
            </if>
            <if test="bankBranch != null">
                bank_branch,
            </if>
            <if test="bankCardNo != null">
                bank_card_no,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="readyPlayAmountTime != null">
                ready_play_amount_time,
            </if>
            <if test="playAmountTime != null">
                play_amount_time,
            </if>
            <if test="playAmountStatus != null">
                play_amount_status,
            </if>
            <if test="statisticsYear != null">
                statistics_year,
            </if>
            <if test="statisticsYearMonth != null">
                statistics_year_month,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="amountPay != null">
                amount_pay,
            </if>
            <if test="subordinateStatus != null">
                subordinate_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="beauticianId != null">
                #{beauticianId,jdbcType=INTEGER},
            </if>
            <if test="storeName != null">
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianName != null">
                #{beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianPhone != null">
                #{beauticianPhone,jdbcType=VARCHAR},
            </if>
            <if test="beauticianType != null">
                #{beauticianType,jdbcType=TINYINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=INTEGER},
            </if>
            <if test="productNumber != null">
                #{productNumber,jdbcType=INTEGER},
            </if>
            <if test="platformAmount != null">
                #{platformAmount,jdbcType=INTEGER},
            </if>
            <if test="storeAmoun != null">
                #{storeAmoun,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tradeStatus != null">
                #{tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="income != null">
                #{income,jdbcType=INTEGER},
            </if>
            <if test="visitAmount != null">
                #{visitAmount,jdbcType=INTEGER},
            </if>
            <if test="netIncome != null">
                #{netIncome,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                #{payMethod,jdbcType=INTEGER},
            </if>
            <if test="payRate != null">
                #{payRate,jdbcType=INTEGER},
            </if>
            <if test="settlementTime != null">
                #{settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reimburseAmount != null">
                #{reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="reimburseTime != null">
                #{reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="withdrawAmount != null">
                #{withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="taxation != null">
                #{taxation,jdbcType=INTEGER},
            </if>
            <if test="actualAmount != null">
                #{actualAmount,jdbcType=INTEGER},
            </if>
            <if test="bankName != null">
                #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="bankBranch != null">
                #{bankBranch,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null">
                #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readyPlayAmountTime != null">
                #{readyPlayAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="playAmountTime != null">
                #{playAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="playAmountStatus != null">
                #{playAmountStatus,jdbcType=TINYINT},
            </if>
            <if test="statisticsYear != null">
                #{statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="statisticsYearMonth != null">
                #{statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="amountPay != null">
                #{amountPay,jdbcType=INTEGER},
            </if>
            <if test="subordinateStatus != null">
                #{subordinateStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetailExample"
            resultType="java.lang.Long">
        select count(*) from beautician_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update beautician_trade_detail
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.storeId != null">
                store_id = #{record.storeId,jdbcType=INTEGER},
            </if>
            <if test="record.beauticianId != null">
                beautician_id = #{record.beauticianId,jdbcType=INTEGER},
            </if>
            <if test="record.storeName != null">
                store_name = #{record.storeName,jdbcType=VARCHAR},
            </if>
            <if test="record.beauticianName != null">
                beautician_name = #{record.beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="record.beauticianPhone != null">
                beautician_phone = #{record.beauticianPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.beauticianType != null">
                beautician_type = #{record.beauticianType,jdbcType=TINYINT},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.tradeType != null">
                trade_type = #{record.tradeType,jdbcType=INTEGER},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.productPrice != null">
                product_price = #{record.productPrice,jdbcType=INTEGER},
            </if>
            <if test="record.productNumber != null">
                product_number = #{record.productNumber,jdbcType=INTEGER},
            </if>
            <if test="record.platformAmount != null">
                platform_amount = #{record.platformAmount,jdbcType=INTEGER},
            </if>
            <if test="record.storeAmoun != null">
                store_amoun = #{record.storeAmoun,jdbcType=INTEGER},
            </if>
            <if test="record.payTime != null">
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.tradeStatus != null">
                trade_status = #{record.tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="record.income != null">
                income = #{record.income,jdbcType=INTEGER},
            </if>
            <if test="record.visitAmount != null">
                visit_amount = #{record.visitAmount,jdbcType=INTEGER},
            </if>
            <if test="record.netIncome != null">
                net_income = #{record.netIncome,jdbcType=INTEGER},
            </if>
            <if test="record.payMethod != null">
                pay_method = #{record.payMethod,jdbcType=INTEGER},
            </if>
            <if test="record.payRate != null">
                pay_rate = #{record.payRate,jdbcType=INTEGER},
            </if>
            <if test="record.settlementTime != null">
                settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reimburseAmount != null">
                reimburse_amount = #{record.reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="record.reimburseTime != null">
                reimburse_time = #{record.reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.withdrawAmount != null">
                withdraw_amount = #{record.withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="record.taxation != null">
                taxation = #{record.taxation,jdbcType=INTEGER},
            </if>
            <if test="record.actualAmount != null">
                actual_amount = #{record.actualAmount,jdbcType=INTEGER},
            </if>
            <if test="record.bankName != null">
                bank_name = #{record.bankName,jdbcType=VARCHAR},
            </if>
            <if test="record.bankBranch != null">
                bank_branch = #{record.bankBranch,jdbcType=VARCHAR},
            </if>
            <if test="record.bankCardNo != null">
                bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.readyPlayAmountTime != null">
                ready_play_amount_time = #{record.readyPlayAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.playAmountTime != null">
                play_amount_time = #{record.playAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.playAmountStatus != null">
                play_amount_status = #{record.playAmountStatus,jdbcType=TINYINT},
            </if>
            <if test="record.statisticsYear != null">
                statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="record.statisticsYearMonth != null">
                statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.amountPay != null">
                amount_pay = #{record.amountPay,jdbcType=INTEGER},
            </if>
            <if test="record.subordinateStatus != null">
                subordinate_status = #{record.subordinateStatus,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update beautician_trade_detail
        set id = #{record.id,jdbcType=INTEGER},
        store_id = #{record.storeId,jdbcType=INTEGER},
        beautician_id = #{record.beauticianId,jdbcType=INTEGER},
        store_name = #{record.storeName,jdbcType=VARCHAR},
        beautician_name = #{record.beauticianName,jdbcType=VARCHAR},
        beautician_phone = #{record.beauticianPhone,jdbcType=VARCHAR},
        beautician_type = #{record.beauticianType,jdbcType=TINYINT},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        trade_type = #{record.tradeType,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        product_price = #{record.productPrice,jdbcType=INTEGER},
        product_number = #{record.productNumber,jdbcType=INTEGER},
        platform_amount = #{record.platformAmount,jdbcType=INTEGER},
        store_amoun = #{record.storeAmoun,jdbcType=INTEGER},
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
        trade_status = #{record.tradeStatus,jdbcType=INTEGER},
        income = #{record.income,jdbcType=INTEGER},
        visit_amount = #{record.visitAmount,jdbcType=INTEGER},
        net_income = #{record.netIncome,jdbcType=INTEGER},
        pay_method = #{record.payMethod,jdbcType=INTEGER},
        pay_rate = #{record.payRate,jdbcType=INTEGER},
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
        reimburse_amount = #{record.reimburseAmount,jdbcType=INTEGER},
        reimburse_time = #{record.reimburseTime,jdbcType=TIMESTAMP},
        withdraw_amount = #{record.withdrawAmount,jdbcType=INTEGER},
        taxation = #{record.taxation,jdbcType=INTEGER},
        actual_amount = #{record.actualAmount,jdbcType=INTEGER},
        bank_name = #{record.bankName,jdbcType=VARCHAR},
        bank_branch = #{record.bankBranch,jdbcType=VARCHAR},
        bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        ready_play_amount_time = #{record.readyPlayAmountTime,jdbcType=TIMESTAMP},
        play_amount_time = #{record.playAmountTime,jdbcType=TIMESTAMP},
        play_amount_status = #{record.playAmountStatus,jdbcType=TINYINT},
        statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
        statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        amount_pay = #{record.amountPay,jdbcType=INTEGER},
        subordinate_status = #{record.subordinateStatus,jdbcType=INTEGER},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetail">
        update beautician_trade_detail
        <set>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="beauticianId != null">
                beautician_id = #{beauticianId,jdbcType=INTEGER},
            </if>
            <if test="storeName != null">
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianName != null">
                beautician_name = #{beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianPhone != null">
                beautician_phone = #{beauticianPhone,jdbcType=VARCHAR},
            </if>
            <if test="beauticianType != null">
                beautician_type = #{beauticianType,jdbcType=TINYINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                trade_type = #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=INTEGER},
            </if>
            <if test="productNumber != null">
                product_number = #{productNumber,jdbcType=INTEGER},
            </if>
            <if test="platformAmount != null">
                platform_amount = #{platformAmount,jdbcType=INTEGER},
            </if>
            <if test="storeAmoun != null">
                store_amoun = #{storeAmoun,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tradeStatus != null">
                trade_status = #{tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="income != null">
                income = #{income,jdbcType=INTEGER},
            </if>
            <if test="visitAmount != null">
                visit_amount = #{visitAmount,jdbcType=INTEGER},
            </if>
            <if test="netIncome != null">
                net_income = #{netIncome,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod,jdbcType=INTEGER},
            </if>
            <if test="payRate != null">
                pay_rate = #{payRate,jdbcType=INTEGER},
            </if>
            <if test="settlementTime != null">
                settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reimburseAmount != null">
                reimburse_amount = #{reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="reimburseTime != null">
                reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount = #{withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="taxation != null">
                taxation = #{taxation,jdbcType=INTEGER},
            </if>
            <if test="actualAmount != null">
                actual_amount = #{actualAmount,jdbcType=INTEGER},
            </if>
            <if test="bankName != null">
                bank_name = #{bankName,jdbcType=VARCHAR},
            </if>
            <if test="bankBranch != null">
                bank_branch = #{bankBranch,jdbcType=VARCHAR},
            </if>
            <if test="bankCardNo != null">
                bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readyPlayAmountTime != null">
                ready_play_amount_time = #{readyPlayAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="playAmountTime != null">
                play_amount_time = #{playAmountTime,jdbcType=TIMESTAMP},
            </if>
            <if test="playAmountStatus != null">
                play_amount_status = #{playAmountStatus,jdbcType=TINYINT},
            </if>
            <if test="statisticsYear != null">
                statistics_year = #{statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="statisticsYearMonth != null">
                statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="amountPay != null">
                amount_pay = #{amountPay,jdbcType=INTEGER},
            </if>
            <if test="subordinateStatus != null">
                subordinate_status = #{subordinateStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetail">
        update beautician_trade_detail
        set store_id = #{storeId,jdbcType=INTEGER},
        beautician_id = #{beauticianId,jdbcType=INTEGER},
        store_name = #{storeName,jdbcType=VARCHAR},
        beautician_name = #{beauticianName,jdbcType=VARCHAR},
        beautician_phone = #{beauticianPhone,jdbcType=VARCHAR},
        beautician_type = #{beauticianType,jdbcType=TINYINT},
        order_no = #{orderNo,jdbcType=VARCHAR},
        trade_type = #{tradeType,jdbcType=INTEGER},
        product_name = #{productName,jdbcType=VARCHAR},
        product_price = #{productPrice,jdbcType=INTEGER},
        product_number = #{productNumber,jdbcType=INTEGER},
        platform_amount = #{platformAmount,jdbcType=INTEGER},
        store_amoun = #{storeAmoun,jdbcType=INTEGER},
        pay_time = #{payTime,jdbcType=TIMESTAMP},
        trade_status = #{tradeStatus,jdbcType=INTEGER},
        income = #{income,jdbcType=INTEGER},
        visit_amount = #{visitAmount,jdbcType=INTEGER},
        net_income = #{netIncome,jdbcType=INTEGER},
        pay_method = #{payMethod,jdbcType=INTEGER},
        pay_rate = #{payRate,jdbcType=INTEGER},
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
        reimburse_amount = #{reimburseAmount,jdbcType=INTEGER},
        reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP},
        withdraw_amount = #{withdrawAmount,jdbcType=INTEGER},
        taxation = #{taxation,jdbcType=INTEGER},
        actual_amount = #{actualAmount,jdbcType=INTEGER},
        bank_name = #{bankName,jdbcType=VARCHAR},
        bank_branch = #{bankBranch,jdbcType=VARCHAR},
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
        add_time = #{addTime,jdbcType=TIMESTAMP},
        ready_play_amount_time = #{readyPlayAmountTime,jdbcType=TIMESTAMP},
        play_amount_time = #{playAmountTime,jdbcType=TIMESTAMP},
        play_amount_status = #{playAmountStatus,jdbcType=TINYINT},
        statistics_year = #{statisticsYear,jdbcType=VARCHAR},
        statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        amount_pay = #{amountPay,jdbcType=INTEGER},
        subordinate_status = #{subordinateStatus,jdbcType=INTEGER},
        remarks = #{remarks,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM beautician_trade_detail LIMIT #{offset},#{limit}
    </select>
    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.financial.BeauticianTradeDetail"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from beautician_trade_detail
        <where>
            <if test="storeId != null">
                and store_id = #{storeId,jdbcType=INTEGER}
            </if>
            <if test="beauticianId != null">
                and beautician_id = #{beauticianId,jdbcType=INTEGER}
            </if>
            <if test="storeName != null">
                and store_name = #{storeName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianName != null">
                and beautician_name = #{beauticianName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianPhone != null">
                and beautician_phone = #{beauticianPhone,jdbcType=VARCHAR}
            </if>
            <if test="beauticianType != null">
                and beautician_type = #{beauticianType,jdbcType=TINYINT}
            </if>
            <if test="orderNo != null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="tradeType != null">
                and trade_type = #{tradeType,jdbcType=INTEGER}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
            <if test="productPrice != null">
                and product_price = #{productPrice,jdbcType=INTEGER}
            </if>
            <if test="productNumber != null">
                and product_number = #{productNumber,jdbcType=INTEGER}
            </if>
            <if test="platformAmount != null">
                and platform_amount = #{platformAmount,jdbcType=INTEGER}
            </if>
            <if test="storeAmoun != null">
                and store_amoun = #{storeAmoun,jdbcType=INTEGER}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="tradeStatus != null">
                and trade_status = #{tradeStatus,jdbcType=INTEGER}
            </if>
            <if test="income != null">
                and income = #{income,jdbcType=INTEGER}
            </if>
            <if test="visitAmount != null">
                and visit_amount = #{visitAmount,jdbcType=INTEGER}
            </if>
            <if test="netIncome != null">
                and net_income = #{netIncome,jdbcType=INTEGER}
            </if>
            <if test="payMethod != null">
                and pay_method = #{payMethod,jdbcType=INTEGER}
            </if>
            <if test="payRate != null">
                and pay_rate = #{payRate,jdbcType=INTEGER}
            </if>
            <if test="settlementTime != null">
                and settlement_time = #{settlementTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reimburseAmount != null">
                and reimburse_amount = #{reimburseAmount,jdbcType=INTEGER}
            </if>
            <if test="reimburseTime != null">
                and reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP}
            </if>
            <if test="withdrawAmount != null">
                and withdraw_amount = #{withdrawAmount,jdbcType=INTEGER}
            </if>
            <if test="taxation != null">
                and taxation = #{taxation,jdbcType=INTEGER}
            </if>
            <if test="actualAmount != null">
                and actual_amount = #{actualAmount,jdbcType=INTEGER}
            </if>
            <if test="bankName != null">
                and bank_name = #{bankName,jdbcType=VARCHAR}
            </if>
            <if test="bankBranch != null">
                and bank_branch = #{bankBranch,jdbcType=VARCHAR}
            </if>
            <if test="bankCardNo != null">
                and bank_card_no = #{bankCardNo,jdbcType=VARCHAR}
            </if>
            <if test="addTime != null">
                and add_time = #{addTime,jdbcType=TIMESTAMP}
            </if>
            <if test="readyPlayAmountTime != null">
                and ready_play_amount_time = #{readyPlayAmountTime,jdbcType=TIMESTAMP}
            </if>
            <if test="playAmountTime != null">
                and play_amount_time = #{playAmountTime,jdbcType=TIMESTAMP}
            </if>
            <if test="playAmountStatus != null">
                and play_amount_status = #{playAmountStatus,jdbcType=TINYINT}
            </if>
            <if test="statisticsYear != null">
                and statistics_year = #{statisticsYear,jdbcType=VARCHAR}
            </if>
            <if test="statisticsYearMonth != null">
                and statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
            <if test="amountPay != null">
                and amount_pay = #{amountPay,jdbcType=INTEGER}
            </if>
            <if test="subordinateStatus != null">
                and subordinate_status = #{subordinateStatus,jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="selectListByConditionsVo" parameterType="com.union.aimei.common.vo.financial.BeauticianTradeDetailVo"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from beautician_trade_detail
        <where>
            <if test="storeId != null">
                and store_id = #{storeId,jdbcType=INTEGER}
            </if>
            <if test="beauticianId != null">
                and beautician_id = #{beauticianId,jdbcType=INTEGER}
            </if>
            <if test="storeName != null">
                and store_name = #{storeName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianName != null">
                and beautician_name = #{beauticianName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianPhone != null">
                and beautician_phone = #{beauticianPhone,jdbcType=VARCHAR}
            </if>
            <if test="beauticianType != null">
                and beautician_type = #{beauticianType,jdbcType=TINYINT}
            </if>
            <if test="orderNo != null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="tradeType != null">
                and trade_type = #{tradeType,jdbcType=INTEGER}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
            <if test="productPrice != null">
                and product_price = #{productPrice,jdbcType=INTEGER}
            </if>
            <if test="productNumber != null">
                and product_number = #{productNumber,jdbcType=INTEGER}
            </if>
            <if test="platformAmount != null">
                and platform_amount = #{platformAmount,jdbcType=INTEGER}
            </if>
            <if test="storeAmoun != null">
                and store_amoun = #{storeAmoun,jdbcType=INTEGER}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="tradeStatus != null">
                and trade_status = #{tradeStatus,jdbcType=INTEGER}
            </if>
            <if test="income != null">
                and income = #{income,jdbcType=INTEGER}
            </if>
            <if test="visitAmount != null">
                and visit_amount = #{visitAmount,jdbcType=INTEGER}
            </if>
            <if test="netIncome != null">
                and net_income = #{netIncome,jdbcType=INTEGER}
            </if>
            <if test="payMethod != null">
                and pay_method = #{payMethod,jdbcType=INTEGER}
            </if>
            <if test="payRate != null">
                and pay_rate = #{payRate,jdbcType=INTEGER}
            </if>
            <if test="settlementTime != null">
                and settlement_time = #{settlementTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reimburseAmount != null">
                and reimburse_amount = #{reimburseAmount,jdbcType=INTEGER}
            </if>
            <if test="reimburseTime != null">
                and reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP}
            </if>
            <if test="withdrawAmount != null">
                and withdraw_amount = #{withdrawAmount,jdbcType=INTEGER}
            </if>
            <if test="taxation != null">
                and taxation = #{taxation,jdbcType=INTEGER}
            </if>
            <if test="actualAmount != null">
                and actual_amount = #{actualAmount,jdbcType=INTEGER}
            </if>
            <if test="bankName != null">
                and bank_name = #{bankName,jdbcType=VARCHAR}
            </if>
            <if test="bankBranch != null">
                and bank_branch = #{bankBranch,jdbcType=VARCHAR}
            </if>
            <if test="bankCardNo != null">
                and bank_card_no = #{bankCardNo,jdbcType=VARCHAR}
            </if>
            <if test="addTime != null">
                and add_time = #{addTime,jdbcType=TIMESTAMP}
            </if>
            <if test="readyPlayAmountTime != null">
                and ready_play_amount_time = #{readyPlayAmountTime,jdbcType=TIMESTAMP}
            </if>
            <if test="playAmountTime != null">
                and play_amount_time = #{playAmountTime,jdbcType=TIMESTAMP}
            </if>
            <if test="playAmountStatus != null">
                and play_amount_status = #{playAmountStatus,jdbcType=TINYINT}
            </if>
            <if test="statisticsYear != null">
                and statistics_year = #{statisticsYear,jdbcType=VARCHAR}
            </if>
            <if test="statisticsYearMonth != null">
                and statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
            <if test="amountPay != null">
                and amount_pay = #{amountPay,jdbcType=INTEGER}
            </if>
            <if test="subordinateStatus != null">
                and subordinate_status = #{subordinateStatus,jdbcType=INTEGER}
            </if>
            <if test="findType != null">
                <choose>
                    <when test="findType == 0">
                        AND ((trade_type = 1 and trade_status = 1) OR (trade_type = 2))
                    </when>
                    <when test="findType == 1">
                        AND trade_type in (1,3)
                        AND trade_status = 0
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY settlement_time DESC
    </select>

    <select id="dayOrderAndAccount" parameterType="integer" resultType="map">
    SELECT
        COUNT(beautician_id) AS dayCount,
        IFNULL(SUM(net_income), 0) AS daySum
        FROM
            beautician_trade_detail
        WHERE
            beautician_id = #{id}
        AND TO_DAYS(create_time) = TO_DAYS(NOW())
        AND TO_DAYS(pay_time) = TO_DAYS(NOW());
  </select>

    <select id="queryMemberPerformance"
            resultType="com.union.aimei.common.vo.financial.QueryMemberPerformanceResponseVo"
            parameterType="com.union.aimei.common.vo.financial.QueryMemberPerformanceVo">
        SELECT
        beautician_id AS beauticianId,
        IFNULL( SUM( product_price ) , 0 ) AS amount,
        IFNULL( COUNT( product_name ) , 0 ) AS oderNumber
        FROM
        beautician_trade_detail
        WHERE
        store_id = #{storeId}
        AND trade_type = 1
        AND trade_status = 1
        <if test="selectType != null">
            and beautician_type = #{selectType,jdbcType=BIT}
        </if>
        <if test="startDate!=null">
            AND settlement_time <![CDATA[ >= ]]> #{startDate}
        </if>
        <if test="endDate!=null">
            AND settlement_time <![CDATA[ <= ]]> #{endDate}
        </if>
        GROUP BY
        beautician_id
        ORDER BY
        amount DESC
    </select>


    <select id="queryMemberPerformanceV111"
            resultType="com.union.aimei.common.vo.financial.QueryMemberPerformanceResponseVo"
            parameterType="com.union.aimei.common.vo.financial.QueryMemberPerformanceVo">
        <choose>
            <when test="selectType == 0">
               SELECT
                    beautician_id AS beauticianId ,
                    IFNULL( SUM( total_amount ), 0 ) AS amount,
                    IFNULL( COUNT( beautician_id ), 0 ) AS oderNumber
                FROM
                    store_subordinate_trade_detail
                WHERE
                    store_id = #{storeId}
                    AND trade_type = 1
                    AND trade_status = 1
                <if test="startDate!=null">
                    AND settlement_time <![CDATA[ >= ]]> #{startDate}
                </if>
                <if test="endDate!=null">
                    AND settlement_time <![CDATA[ <= ]]> #{endDate}
                </if>
                GROUP BY
                  beautician_id
                ORDER BY
                amount DESC
            </when>
            <when test="selectType == 1">
               SELECT
                    beautician_id AS beauticianId ,
                    IFNULL( SUM( total_amount ), 0 ) AS amount,
                    IFNULL( COUNT( beautician_id ), 0 ) AS oderNumber
                FROM
                    store_trade_detail
                WHERE
                    store_id = #{storeId}
                    AND trade_type = 1
                    AND trade_status = 1
                <if test="startDate!=null">
                    AND settlement_time <![CDATA[ >= ]]> #{startDate}
                </if>
                <if test="endDate!=null">
                    AND settlement_time <![CDATA[ <= ]]> #{endDate}
                </if>
                GROUP BY
                  beautician_id
                ORDER BY
                amount DESC
            </when>
        </choose>
    </select>

    <!--月收入-->
    <select id="monthAccount" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        IFNULL(SUM(income), 0) AS monthSum
        FROM
            beautician_trade_detail
        WHERE
            beautician_id = #{id}
        AND statistics_year_month = #{statisticsYearMonth}
        AND trade_type = 1
        AND trade_status = 1;
    </select>


    <select id="queryBeauticianTradeStatistical"
            resultType="com.union.aimei.common.vo.financial.BeauticianTradeStatisticalVo" parameterType="int">
        SELECT
            IFNULL( can.canincome - notcan.notincome, 0 ) AS settlementAmount ,
            IFNULL( commission.adds + refund.reduction, 0 ) AS pendingAmount
        FROM
            ( SELECT IFNULL( sum( net_income ), 0 ) adds FROM beautician_trade_detail WHERE beautician_id = #{beauticianId} AND trade_type = 1 AND trade_status = 0 ) commission,
            ( SELECT IFNULL( sum( net_income ), 0 ) reduction FROM beautician_trade_detail WHERE beautician_id = #{beauticianId} AND trade_type = 3 AND trade_status = 0 ) refund,
            ( SELECT IFNULL( sum( net_income ), 0 ) canincome FROM beautician_trade_detail WHERE beautician_id = #{beauticianId} AND trade_type = 1 AND trade_status = 1 ) can,
            ( SELECT IFNULL( sum( withdraw_amount ), 0 ) notincome FROM beautician_trade_detail WHERE beautician_id = #{beauticianId} AND trade_type = 2 ) notcan
    </select>
</mapper>