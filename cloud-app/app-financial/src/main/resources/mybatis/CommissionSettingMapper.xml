<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.financial.mapper.CommissionSettingMapper">
  <resultMap id="BaseResultMap" type="com.union.aimei.common.model.financial.CommissionSetting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="commission_name" jdbcType="VARCHAR" property="commissionName" />
    <result column="commission_code" jdbcType="VARCHAR" property="commissionCode" />
    <result column="commission_type" jdbcType="TINYINT" property="commissionType" />
    <result column="commission_rate" jdbcType="INTEGER" property="commissionRate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, commission_name, commission_code, commission_type, commission_rate, remarks,
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.union.aimei.common.model.financial.CommissionSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commission_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commission_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commission_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.union.aimei.common.model.financial.CommissionSettingExample">
    delete from commission_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.union.aimei.common.model.financial.CommissionSetting">
    insert into commission_setting (id, commission_name, commission_code,
    commission_type, commission_rate, remarks,
    create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{commissionName,jdbcType=VARCHAR}, #{commissionCode,jdbcType=VARCHAR},
    #{commissionType,jdbcType=TINYINT}, #{commissionRate,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.union.aimei.common.model.financial.CommissionSetting">
    insert into commission_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commissionName != null">
        commission_name,
      </if>
      <if test="commissionCode != null">
        commission_code,
      </if>
      <if test="commissionType != null">
        commission_type,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commissionName != null">
        #{commissionName,jdbcType=VARCHAR},
      </if>
      <if test="commissionCode != null">
        #{commissionCode,jdbcType=VARCHAR},
      </if>
      <if test="commissionType != null">
        #{commissionType,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.union.aimei.common.model.financial.CommissionSettingExample" resultType="java.lang.Long">
    select count(*) from commission_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commission_setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commissionName != null">
        commission_name = #{record.commissionName,jdbcType=VARCHAR},
      </if>
      <if test="record.commissionCode != null">
        commission_code = #{record.commissionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.commissionType != null">
        commission_type = #{record.commissionType,jdbcType=TINYINT},
      </if>
      <if test="record.commissionRate != null">
        commission_rate = #{record.commissionRate,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commission_setting
    set id = #{record.id,jdbcType=INTEGER},
    commission_name = #{record.commissionName,jdbcType=VARCHAR},
    commission_code = #{record.commissionCode,jdbcType=VARCHAR},
    commission_type = #{record.commissionType,jdbcType=TINYINT},
    commission_rate = #{record.commissionRate,jdbcType=INTEGER},
    remarks = #{record.remarks,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.financial.CommissionSetting">
    update commission_setting
    <set>
      <if test="commissionName != null">
        commission_name = #{commissionName,jdbcType=VARCHAR},
      </if>
      <if test="commissionCode != null">
        commission_code = #{commissionCode,jdbcType=VARCHAR},
      </if>
      <if test="commissionType != null">
        commission_type = #{commissionType,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.financial.CommissionSetting">
    update commission_setting
    set commission_name = #{commissionName,jdbcType=VARCHAR},
    commission_code = #{commissionCode,jdbcType=VARCHAR},
    commission_type = #{commissionType,jdbcType=TINYINT},
    commission_rate = #{commissionRate,jdbcType=INTEGER},
    remarks = #{remarks,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM commission_setting LIMIT #{offset},#{limit}
  </select>
  <select id="selectListByConditions" parameterType="com.union.aimei.common.model.financial.CommissionSetting" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from commission_setting
    <where>
      <if test="commissionName != null">
        and commission_name = #{commissionName,jdbcType=VARCHAR}
      </if>
      <if test="commissionCode != null">
        and commission_code = #{commissionCode,jdbcType=VARCHAR}
      </if>
      <if test="commissionType != null">
        and commission_type = #{commissionType,jdbcType=TINYINT}
      </if>
      <if test="commissionRate != null">
        and commission_rate = #{commissionRate,jdbcType=INTEGER}
      </if>
      <if test="remarks != null">
        and remarks = #{remarks,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>