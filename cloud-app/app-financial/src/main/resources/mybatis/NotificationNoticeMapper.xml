<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.financial.mapper.NotificationNoticeMapper">
  <resultMap id="BaseResultMap" type="com.union.aimei.common.model.financial.NotificationNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="notice_status" jdbcType="INTEGER" property="noticeStatus" />
    <result column="notice_start_time" jdbcType="TIMESTAMP" property="noticeStartTime" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="used_type" jdbcType="INTEGER" property="usedType" />
    <result column="notice_end_time" jdbcType="TIMESTAMP" property="noticeEndTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notice_content, notice_status, notice_start_time, publish_time, used_type, notice_end_time, 
    remarks
  </sql>
  <select id="selectByExample" parameterType="com.union.aimei.common.model.financial.NotificationNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notification_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notification_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.union.aimei.common.model.financial.NotificationNoticeExample">
    delete from notification_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.union.aimei.common.model.financial.NotificationNotice">
    insert into notification_notice (id, notice_content, notice_status, 
      notice_start_time, publish_time, used_type, 
      notice_end_time, remarks)
    values (#{id,jdbcType=INTEGER}, #{noticeContent,jdbcType=VARCHAR}, #{noticeStatus,jdbcType=INTEGER}, 
      #{noticeStartTime,jdbcType=TIMESTAMP}, #{publishTime,jdbcType=TIMESTAMP}, #{usedType,jdbcType=INTEGER}, 
      #{noticeEndTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.union.aimei.common.model.financial.NotificationNotice">
    insert into notification_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeContent != null">
        notice_content,
      </if>
      <if test="noticeStatus != null">
        notice_status,
      </if>
      <if test="noticeStartTime != null">
        notice_start_time,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="usedType != null">
        used_type,
      </if>
      <if test="noticeEndTime != null">
        notice_end_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeStatus != null">
        #{noticeStatus,jdbcType=INTEGER},
      </if>
      <if test="noticeStartTime != null">
        #{noticeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedType != null">
        #{usedType,jdbcType=INTEGER},
      </if>
      <if test="noticeEndTime != null">
        #{noticeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.union.aimei.common.model.financial.NotificationNoticeExample" resultType="java.lang.Long">
    select count(*) from notification_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notification_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.noticeContent != null">
        notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeStatus != null">
        notice_status = #{record.noticeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.noticeStartTime != null">
        notice_start_time = #{record.noticeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usedType != null">
        used_type = #{record.usedType,jdbcType=INTEGER},
      </if>
      <if test="record.noticeEndTime != null">
        notice_end_time = #{record.noticeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notification_notice
    set id = #{record.id,jdbcType=INTEGER},
      notice_content = #{record.noticeContent,jdbcType=VARCHAR},
      notice_status = #{record.noticeStatus,jdbcType=INTEGER},
      notice_start_time = #{record.noticeStartTime,jdbcType=TIMESTAMP},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      used_type = #{record.usedType,jdbcType=INTEGER},
      notice_end_time = #{record.noticeEndTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.financial.NotificationNotice">
    update notification_notice
    <set>
      <if test="noticeContent != null">
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeStatus != null">
        notice_status = #{noticeStatus,jdbcType=INTEGER},
      </if>
      <if test="noticeStartTime != null">
        notice_start_time = #{noticeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedType != null">
        used_type = #{usedType,jdbcType=INTEGER},
      </if>
      <if test="noticeEndTime != null">
        notice_end_time = #{noticeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.financial.NotificationNotice">
    update notification_notice
    set notice_content = #{noticeContent,jdbcType=VARCHAR},
      notice_status = #{noticeStatus,jdbcType=INTEGER},
      notice_start_time = #{noticeStartTime,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      used_type = #{usedType,jdbcType=INTEGER},
      notice_end_time = #{noticeEndTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM notification_notice LIMIT #{offset},#{limit}
  </select>
  <select id="selectListByConditions" parameterType="com.union.aimei.common.model.financial.NotificationNotice" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
     from notification_notice
    <where>
      <if test="noticeContent != null">
        and notice_content = #{noticeContent,jdbcType=VARCHAR}
      </if>
      <if test="noticeStatus != null">
        and notice_status = #{noticeStatus,jdbcType=INTEGER}
      </if>
      <if test="noticeStartTime != null">
        and notice_start_time = #{noticeStartTime,jdbcType=TIMESTAMP}
      </if>
      <if test="publishTime != null">
        and publish_time = #{publishTime,jdbcType=TIMESTAMP}
      </if>
      <if test="usedType != null">
        and used_type = #{usedType,jdbcType=INTEGER}
      </if>
      <if test="noticeEndTime != null">
        and notice_end_time = #{noticeEndTime,jdbcType=TIMESTAMP}
      </if>
      <if test="remarks != null">
        and remarks = #{remarks,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>