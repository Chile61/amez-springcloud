<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.pc.financial.mapper.StoreTradeStatisticsMapper">
  <resultMap id="BaseResultMap" type="com.union.aimei.common.model.financial.StoreTradeStatistics">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="store_phone" jdbcType="VARCHAR" property="storePhone" />
    <result column="monthly_order_quantity" jdbcType="INTEGER" property="monthlyOrderQuantity" />
    <result column="total_sales_this_month" jdbcType="INTEGER" property="totalSalesThisMonth" />
    <result column="service_order" jdbcType="INTEGER" property="serviceOrder" />
    <result column="service_order_amount" jdbcType="INTEGER" property="serviceOrderAmount" />
    <result column="order_completed" jdbcType="INTEGER" property="orderCompleted" />
    <result column="order_completed_amount" jdbcType="INTEGER" property="orderCompletedAmount" />
    <result column="refund_order" jdbcType="INTEGER" property="refundOrder" />
    <result column="refund_order_amount" jdbcType="INTEGER" property="refundOrderAmount" />
    <result column="card_number" jdbcType="INTEGER" property="cardNumber" />
    <result column="sell_card_rewards" jdbcType="INTEGER" property="sellCardRewards" />
    <result column="on_net_income" jdbcType="INTEGER" property="onNetIncome" />
    <result column="play_status" jdbcType="INTEGER" property="playStatus" />
    <result column="play_time" jdbcType="TIMESTAMP" property="playTime" />
    <result column="statistics_year" jdbcType="VARCHAR" property="statisticsYear" />
    <result column="statistics_year_month" jdbcType="VARCHAR" property="statisticsYearMonth" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="reconciliation_type" jdbcType="BIT" property="reconciliationType" />
    <result column="reconciliation_amount" jdbcType="INTEGER" property="reconciliationAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, store_id, store_name, store_phone, monthly_order_quantity, total_sales_this_month, 
    service_order, service_order_amount, order_completed, order_completed_amount, refund_order, 
    refund_order_amount, card_number, sell_card_rewards, on_net_income, play_status, 
    play_time, statistics_year, statistics_year_month, create_time, update_time, remarks , reconciliation_type , reconciliation_amount
  </sql>
  <select id="selectByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeStatisticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_trade_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store_trade_statistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_trade_statistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeStatisticsExample">
    delete from store_trade_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.union.aimei.common.model.financial.StoreTradeStatistics">
    insert into store_trade_statistics (id, store_id, store_name, 
      store_phone, monthly_order_quantity, total_sales_this_month, 
      service_order, service_order_amount, order_completed, 
      order_completed_amount, refund_order, refund_order_amount, 
      card_number, sell_card_rewards, on_net_income, 
      play_status, play_time, statistics_year, 
      statistics_year_month, create_time, update_time, 
      remarks , reconciliation_type , reconciliation_amount)
    values (#{id,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{storeName,jdbcType=VARCHAR}, 
      #{storePhone,jdbcType=VARCHAR}, #{monthlyOrderQuantity,jdbcType=INTEGER}, #{totalSalesThisMonth,jdbcType=INTEGER}, 
      #{serviceOrder,jdbcType=INTEGER}, #{serviceOrderAmount,jdbcType=INTEGER}, #{orderCompleted,jdbcType=INTEGER}, 
      #{orderCompletedAmount,jdbcType=INTEGER}, #{refundOrder,jdbcType=INTEGER}, #{refundOrderAmount,jdbcType=INTEGER}, 
      #{cardNumber,jdbcType=INTEGER}, #{sellCardRewards,jdbcType=INTEGER}, #{onNetIncome,jdbcType=INTEGER}, 
      #{playStatus,jdbcType=INTEGER}, #{playTime,jdbcType=TIMESTAMP}, #{statisticsYear,jdbcType=VARCHAR}, 
      #{statisticsYearMonth,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR} , #{reconciliationType,jdbcType=BIT} , #{reconciliationAmount,jdbcType=INTEGER} )
  </insert>
  <insert id="insertSelective" parameterType="com.union.aimei.common.model.financial.StoreTradeStatistics">
    insert into store_trade_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="storePhone != null">
        store_phone,
      </if>
      <if test="monthlyOrderQuantity != null">
        monthly_order_quantity,
      </if>
      <if test="totalSalesThisMonth != null">
        total_sales_this_month,
      </if>
      <if test="serviceOrder != null">
        service_order,
      </if>
      <if test="serviceOrderAmount != null">
        service_order_amount,
      </if>
      <if test="orderCompleted != null">
        order_completed,
      </if>
      <if test="orderCompletedAmount != null">
        order_completed_amount,
      </if>
      <if test="refundOrder != null">
        refund_order,
      </if>
      <if test="refundOrderAmount != null">
        refund_order_amount,
      </if>
      <if test="cardNumber != null">
        card_number,
      </if>
      <if test="sellCardRewards != null">
        sell_card_rewards,
      </if>
      <if test="onNetIncome != null">
        on_net_income,
      </if>
      <if test="playStatus != null">
        play_status,
      </if>
      <if test="playTime != null">
        play_time,
      </if>
      <if test="statisticsYear != null">
        statistics_year,
      </if>
      <if test="statisticsYearMonth != null">
        statistics_year_month,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="reconciliationType != null">
        reconciliation_type,
      </if>
      <if test="reconciliationAmount != null">
        reconciliation_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storePhone != null">
        #{storePhone,jdbcType=VARCHAR},
      </if>
      <if test="monthlyOrderQuantity != null">
        #{monthlyOrderQuantity,jdbcType=INTEGER},
      </if>
      <if test="totalSalesThisMonth != null">
        #{totalSalesThisMonth,jdbcType=INTEGER},
      </if>
      <if test="serviceOrder != null">
        #{serviceOrder,jdbcType=INTEGER},
      </if>
      <if test="serviceOrderAmount != null">
        #{serviceOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderCompleted != null">
        #{orderCompleted,jdbcType=INTEGER},
      </if>
      <if test="orderCompletedAmount != null">
        #{orderCompletedAmount,jdbcType=INTEGER},
      </if>
      <if test="refundOrder != null">
        #{refundOrder,jdbcType=INTEGER},
      </if>
      <if test="refundOrderAmount != null">
        #{refundOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=INTEGER},
      </if>
      <if test="sellCardRewards != null">
        #{sellCardRewards,jdbcType=INTEGER},
      </if>
      <if test="onNetIncome != null">
        #{onNetIncome,jdbcType=INTEGER},
      </if>
      <if test="playStatus != null">
        #{playStatus,jdbcType=INTEGER},
      </if>
      <if test="playTime != null">
        #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticsYear != null">
        #{statisticsYear,jdbcType=VARCHAR},
      </if>
      <if test="statisticsYearMonth != null">
        #{statisticsYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="reconciliationType != null">
        #{reconciliationType,jdbcType=BIT},
      </if>
      <if test="reconciliationAmount != null">
        #{reconciliationAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeStatisticsExample" resultType="java.lang.Long">
    select count(*) from store_trade_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update store_trade_statistics
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storePhone != null">
        store_phone = #{record.storePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.monthlyOrderQuantity != null">
        monthly_order_quantity = #{record.monthlyOrderQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.totalSalesThisMonth != null">
        total_sales_this_month = #{record.totalSalesThisMonth,jdbcType=INTEGER},
      </if>
      <if test="record.serviceOrder != null">
        service_order = #{record.serviceOrder,jdbcType=INTEGER},
      </if>
      <if test="record.serviceOrderAmount != null">
        service_order_amount = #{record.serviceOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="record.orderCompleted != null">
        order_completed = #{record.orderCompleted,jdbcType=INTEGER},
      </if>
      <if test="record.orderCompletedAmount != null">
        order_completed_amount = #{record.orderCompletedAmount,jdbcType=INTEGER},
      </if>
      <if test="record.refundOrder != null">
        refund_order = #{record.refundOrder,jdbcType=INTEGER},
      </if>
      <if test="record.refundOrderAmount != null">
        refund_order_amount = #{record.refundOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="record.cardNumber != null">
        card_number = #{record.cardNumber,jdbcType=INTEGER},
      </if>
      <if test="record.sellCardRewards != null">
        sell_card_rewards = #{record.sellCardRewards,jdbcType=INTEGER},
      </if>
      <if test="record.onNetIncome != null">
        on_net_income = #{record.onNetIncome,jdbcType=INTEGER},
      </if>
      <if test="record.playStatus != null">
        play_status = #{record.playStatus,jdbcType=INTEGER},
      </if>
      <if test="record.playTime != null">
        play_time = #{record.playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statisticsYear != null">
        statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticsYearMonth != null">
        statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.reconciliationType != null">
        reconciliation_type = #{record.reconciliationType,jdbcType=BIT},
      </if>
      <if test="record.reconciliationAmount != null">
        reconciliation_amount = #{record.reconciliationAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update store_trade_statistics
    set id = #{record.id,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      store_phone = #{record.storePhone,jdbcType=VARCHAR},
      monthly_order_quantity = #{record.monthlyOrderQuantity,jdbcType=INTEGER},
      total_sales_this_month = #{record.totalSalesThisMonth,jdbcType=INTEGER},
      service_order = #{record.serviceOrder,jdbcType=INTEGER},
      service_order_amount = #{record.serviceOrderAmount,jdbcType=INTEGER},
      order_completed = #{record.orderCompleted,jdbcType=INTEGER},
      order_completed_amount = #{record.orderCompletedAmount,jdbcType=INTEGER},
      refund_order = #{record.refundOrder,jdbcType=INTEGER},
      refund_order_amount = #{record.refundOrderAmount,jdbcType=INTEGER},
      card_number = #{record.cardNumber,jdbcType=INTEGER},
      sell_card_rewards = #{record.sellCardRewards,jdbcType=INTEGER},
      on_net_income = #{record.onNetIncome,jdbcType=INTEGER},
      play_status = #{record.playStatus,jdbcType=INTEGER},
      play_time = #{record.playTime,jdbcType=TIMESTAMP},
      statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
      statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      reconciliation_type = #{record.reconciliationType,jdbcType=BIT},
      reconciliation_amount = #{record.reconciliationAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.financial.StoreTradeStatistics">
    update store_trade_statistics
    <set>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storePhone != null">
        store_phone = #{storePhone,jdbcType=VARCHAR},
      </if>
      <if test="monthlyOrderQuantity != null">
        monthly_order_quantity = #{monthlyOrderQuantity,jdbcType=INTEGER},
      </if>
      <if test="totalSalesThisMonth != null">
        total_sales_this_month = #{totalSalesThisMonth,jdbcType=INTEGER},
      </if>
      <if test="serviceOrder != null">
        service_order = #{serviceOrder,jdbcType=INTEGER},
      </if>
      <if test="serviceOrderAmount != null">
        service_order_amount = #{serviceOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderCompleted != null">
        order_completed = #{orderCompleted,jdbcType=INTEGER},
      </if>
      <if test="orderCompletedAmount != null">
        order_completed_amount = #{orderCompletedAmount,jdbcType=INTEGER},
      </if>
      <if test="refundOrder != null">
        refund_order = #{refundOrder,jdbcType=INTEGER},
      </if>
      <if test="refundOrderAmount != null">
        refund_order_amount = #{refundOrderAmount,jdbcType=INTEGER},
      </if>
      <if test="cardNumber != null">
        card_number = #{cardNumber,jdbcType=INTEGER},
      </if>
      <if test="sellCardRewards != null">
        sell_card_rewards = #{sellCardRewards,jdbcType=INTEGER},
      </if>
      <if test="onNetIncome != null">
        on_net_income = #{onNetIncome,jdbcType=INTEGER},
      </if>
      <if test="playStatus != null">
        play_status = #{playStatus,jdbcType=INTEGER},
      </if>
      <if test="playTime != null">
        play_time = #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticsYear != null">
        statistics_year = #{statisticsYear,jdbcType=VARCHAR},
      </if>
      <if test="statisticsYearMonth != null">
        statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="reconciliationType != null">
        reconciliation_type = #{reconciliationType,jdbcType=BIT},
      </if>
      <if test="reconciliationAmount != null">
        reconciliation_amount = #{reconciliationAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.financial.StoreTradeStatistics">
    update store_trade_statistics
    set store_id = #{storeId,jdbcType=INTEGER},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_phone = #{storePhone,jdbcType=VARCHAR},
      monthly_order_quantity = #{monthlyOrderQuantity,jdbcType=INTEGER},
      total_sales_this_month = #{totalSalesThisMonth,jdbcType=INTEGER},
      service_order = #{serviceOrder,jdbcType=INTEGER},
      service_order_amount = #{serviceOrderAmount,jdbcType=INTEGER},
      order_completed = #{orderCompleted,jdbcType=INTEGER},
      order_completed_amount = #{orderCompletedAmount,jdbcType=INTEGER},
      refund_order = #{refundOrder,jdbcType=INTEGER},
      refund_order_amount = #{refundOrderAmount,jdbcType=INTEGER},
      card_number = #{cardNumber,jdbcType=INTEGER},
      sell_card_rewards = #{sellCardRewards,jdbcType=INTEGER},
      on_net_income = #{onNetIncome,jdbcType=INTEGER},
      play_status = #{playStatus,jdbcType=INTEGER},
      play_time = #{playTime,jdbcType=TIMESTAMP},
      statistics_year = #{statisticsYear,jdbcType=VARCHAR},
      statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      reconciliation_type = #{reconciliationType,jdbcType=BIT},
      reconciliation_amount = #{reconciliationAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM store_trade_statistics LIMIT #{offset},#{limit}
  </select>
  <select id="selectListByConditions" parameterType="com.union.aimei.common.model.financial.StoreTradeStatistics" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
     from store_trade_statistics
    <where>
      <if test="storeId != null">
        and store_id = #{storeId,jdbcType=INTEGER}
      </if>
      <if test="storeName != null">
        and store_name = #{storeName,jdbcType=VARCHAR}
        or store_phone = #{storeName,jdbcType=VARCHAR}
      </if>
      <if test="storePhone != null">
        and store_phone = #{storePhone,jdbcType=VARCHAR}
      </if>
      <if test="monthlyOrderQuantity != null">
        and monthly_order_quantity = #{monthlyOrderQuantity,jdbcType=INTEGER}
      </if>
      <if test="totalSalesThisMonth != null">
        and total_sales_this_month = #{totalSalesThisMonth,jdbcType=INTEGER}
      </if>
      <if test="serviceOrder != null">
        and service_order = #{serviceOrder,jdbcType=INTEGER}
      </if>
      <if test="serviceOrderAmount != null">
        and service_order_amount = #{serviceOrderAmount,jdbcType=INTEGER}
      </if>
      <if test="orderCompleted != null">
        and order_completed = #{orderCompleted,jdbcType=INTEGER}
      </if>
      <if test="orderCompletedAmount != null">
        and order_completed_amount = #{orderCompletedAmount,jdbcType=INTEGER}
      </if>
      <if test="refundOrder != null">
        and refund_order = #{refundOrder,jdbcType=INTEGER}
      </if>
      <if test="refundOrderAmount != null">
        and refund_order_amount = #{refundOrderAmount,jdbcType=INTEGER}
      </if>
      <if test="cardNumber != null">
        and card_number = #{cardNumber,jdbcType=INTEGER}
      </if>
      <if test="sellCardRewards != null">
        and sell_card_rewards = #{sellCardRewards,jdbcType=INTEGER}
      </if>
      <if test="onNetIncome != null">
        and on_net_income = #{onNetIncome,jdbcType=INTEGER}
      </if>
      <if test="playStatus != null">
        and play_status = #{playStatus,jdbcType=INTEGER}
      </if>
      <if test="playTime != null">
        and play_time = #{playTime,jdbcType=TIMESTAMP}
      </if>
      <if test="statisticsYear != null">
        and statistics_year = #{statisticsYear,jdbcType=VARCHAR}
      </if>
      <if test="statisticsYearMonth != null">
        and statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="remarks != null">
        and remarks = #{remarks,jdbcType=VARCHAR}
      </if>
      <if test="reconciliationType != null">
        and reconciliation_type = #{reconciliationType,jdbcType=BIT}
      </if>
      <if test="reconciliationAmount != null">
        and reconciliation_amount = #{reconciliationAmount,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY create_time DESC
  </select>
</mapper>