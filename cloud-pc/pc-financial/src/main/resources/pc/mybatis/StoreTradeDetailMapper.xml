<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.pc.financial.mapper.StoreTradeDetailMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.financial.StoreTradeDetail">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="beautician_id" jdbcType="INTEGER" property="beauticianId" />
        <result column="settlement_status" jdbcType="INTEGER" property="settlementStatus" />
        <result column="store_phone" jdbcType="VARCHAR" property="storePhone" />
        <result column="store_name" jdbcType="VARCHAR" property="storeName" />
        <result column="beautician_name" jdbcType="VARCHAR" property="beauticianName" />
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="trade_type" jdbcType="INTEGER" property="tradeType" />
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
        <result column="trade_status" jdbcType="INTEGER" property="tradeStatus" />
        <result column="total_amount" jdbcType="INTEGER" property="totalAmount" />
        <result column="discounts_amount" jdbcType="INTEGER" property="discountsAmount" />
        <result column="product_price" jdbcType="INTEGER" property="productPrice" />
        <result column="product_discount" jdbcType="INTEGER" property="productDiscount" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="card_price" jdbcType="INTEGER" property="cardPrice" />
        <result column="card_discount" jdbcType="INTEGER" property="cardDiscount" />
        <result column="card_name" jdbcType="VARCHAR" property="cardName" />
        <result column="actual_pay" jdbcType="INTEGER" property="actualPay" />
        <result column="incentive" jdbcType="INTEGER" property="incentive" />
        <result column="member_deduct" jdbcType="INTEGER" property="memberDeduct" />
        <result column="net_amount" jdbcType="INTEGER" property="netAmount" />
        <result column="pay_method" jdbcType="INTEGER" property="payMethod" />
        <result column="pay_rate" jdbcType="INTEGER" property="payRate" />
        <result column="settle_amount" jdbcType="INTEGER" property="settleAmount" />
        <result column="reimburse_amount" jdbcType="INTEGER" property="reimburseAmount" />
        <result column="settlement_time" jdbcType="TIMESTAMP" property="settlementTime" />
        <result column="reimburse_time" jdbcType="TIMESTAMP" property="reimburseTime" />
        <result column="withdraw_amount" jdbcType="INTEGER" property="withdrawAmount" />
        <result column="statistics_year" jdbcType="VARCHAR" property="statisticsYear" />
        <result column="statistics_year_month" jdbcType="VARCHAR" property="statisticsYearMonth" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    </resultMap>

    <sql id="settlementTimeBetweenSql">
         between concat(date_sub(date_sub(date_format(now(),'%y-%m-%d'),interval extract(day from now())-1 day),interval 1 month),' 00:00:00') and concat(date_sub(date_sub(date_format(now(),'%y-%m-%d'),interval extract( day from now()) day),interval 0 month),' 23:59:59')
    </sql>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, store_id, beautician_id, store_phone, store_name, beautician_name, order_no,
        trade_type, pay_time, trade_status, total_amount, discounts_amount, product_price,
        product_discount, product_name, card_price, card_discount, card_name, actual_pay,
        incentive, member_deduct, net_amount, pay_method, pay_rate, settle_amount, reimburse_amount,
        settlement_time, reimburse_time, withdraw_amount, statistics_year, statistics_year_month,
        create_time, update_time, remarks , settlement_status
    </sql>
    <select id="selectByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeDetailExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from store_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from store_trade_detail
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from store_trade_detail
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeDetailExample">
        delete from store_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail">
        insert into store_trade_detail (id, store_id, beautician_id,
        store_phone, store_name, beautician_name,
        order_no, trade_type, pay_time,
        trade_status, total_amount, discounts_amount,
        product_price, product_discount, product_name,
        card_price, card_discount, card_name,
        actual_pay, incentive, member_deduct,
        net_amount, pay_method, pay_rate,
        settle_amount, reimburse_amount, settlement_time,
        reimburse_time, withdraw_amount, statistics_year,
        statistics_year_month, create_time, update_time,
        remarks, settlement_status)
        values (#{id,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{beauticianId,jdbcType=INTEGER},
        #{storePhone,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR}, #{beauticianName,jdbcType=VARCHAR},
        #{orderNo,jdbcType=VARCHAR}, #{tradeType,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP},
        #{tradeStatus,jdbcType=INTEGER}, #{totalAmount,jdbcType=INTEGER}, #{discountsAmount,jdbcType=INTEGER},
        #{productPrice,jdbcType=INTEGER}, #{productDiscount,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR},
        #{cardPrice,jdbcType=INTEGER}, #{cardDiscount,jdbcType=INTEGER}, #{cardName,jdbcType=VARCHAR},
        #{actualPay,jdbcType=INTEGER}, #{incentive,jdbcType=INTEGER}, #{memberDeduct,jdbcType=INTEGER},
        #{netAmount,jdbcType=INTEGER}, #{payMethod,jdbcType=INTEGER}, #{payRate,jdbcType=INTEGER},
        #{settleAmount,jdbcType=INTEGER}, #{reimburseAmount,jdbcType=INTEGER}, #{settlementTime,jdbcType=TIMESTAMP},
        #{reimburseTime,jdbcType=TIMESTAMP}, #{withdrawAmount,jdbcType=INTEGER}, #{statisticsYear,jdbcType=VARCHAR},
        #{statisticsYearMonth,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{remarks,jdbcType=VARCHAR},#{settlement_status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail">
        insert into store_trade_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="beauticianId != null">
                beautician_id,
            </if>
            <if test="storePhone != null">
                store_phone,
            </if>
            <if test="storeName != null">
                store_name,
            </if>
            <if test="beauticianName != null">
                beautician_name,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="tradeType != null">
                trade_type,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="tradeStatus != null">
                trade_status,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="discountsAmount != null">
                discounts_amount,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="productDiscount != null">
                product_discount,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="cardPrice != null">
                card_price,
            </if>
            <if test="cardDiscount != null">
                card_discount,
            </if>
            <if test="cardName != null">
                card_name,
            </if>
            <if test="actualPay != null">
                actual_pay,
            </if>
            <if test="incentive != null">
                incentive,
            </if>
            <if test="memberDeduct != null">
                member_deduct,
            </if>
            <if test="netAmount != null">
                net_amount,
            </if>
            <if test="payMethod != null">
                pay_method,
            </if>
            <if test="payRate != null">
                pay_rate,
            </if>
            <if test="settleAmount != null">
                settle_amount,
            </if>
            <if test="reimburseAmount != null">
                reimburse_amount,
            </if>
            <if test="settlementTime != null">
                settlement_time,
            </if>
            <if test="reimburseTime != null">
                reimburse_time,
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount,
            </if>
            <if test="statisticsYear != null">
                statistics_year,
            </if>
            <if test="statisticsYearMonth != null">
                statistics_year_month,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="settlementStatus != null">
                settlement_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="beauticianId != null">
                #{beauticianId,jdbcType=INTEGER},
            </if>
            <if test="storePhone != null">
                #{storePhone,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null">
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianName != null">
                #{beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tradeStatus != null">
                #{tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="discountsAmount != null">
                #{discountsAmount,jdbcType=INTEGER},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=INTEGER},
            </if>
            <if test="productDiscount != null">
                #{productDiscount,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="cardPrice != null">
                #{cardPrice,jdbcType=INTEGER},
            </if>
            <if test="cardDiscount != null">
                #{cardDiscount,jdbcType=INTEGER},
            </if>
            <if test="cardName != null">
                #{cardName,jdbcType=VARCHAR},
            </if>
            <if test="actualPay != null">
                #{actualPay,jdbcType=INTEGER},
            </if>
            <if test="incentive != null">
                #{incentive,jdbcType=INTEGER},
            </if>
            <if test="memberDeduct != null">
                #{memberDeduct,jdbcType=INTEGER},
            </if>
            <if test="netAmount != null">
                #{netAmount,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                #{payMethod,jdbcType=INTEGER},
            </if>
            <if test="payRate != null">
                #{payRate,jdbcType=INTEGER},
            </if>
            <if test="settleAmount != null">
                #{settleAmount,jdbcType=INTEGER},
            </if>
            <if test="reimburseAmount != null">
                #{reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="settlementTime != null">
                #{settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reimburseTime != null">
                #{reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="withdrawAmount != null">
                #{withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="statisticsYear != null">
                #{statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="statisticsYearMonth != null">
                #{statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="settlementStatus != null">
                #{settlementStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.union.aimei.common.model.financial.StoreTradeDetailExample" resultType="java.lang.Long">
        select count(*) from store_trade_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update store_trade_detail
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.storeId != null">
                store_id = #{record.storeId,jdbcType=INTEGER},
            </if>
            <if test="record.settlementStatus != null">
                settlement_status = #{record.settlementStatus,jdbcType=INTEGER},
            </if>
            <if test="record.beauticianId != null">
                beautician_id = #{record.beauticianId,jdbcType=INTEGER},
            </if>
            <if test="record.storePhone != null">
                store_phone = #{record.storePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.storeName != null">
                store_name = #{record.storeName,jdbcType=VARCHAR},
            </if>
            <if test="record.beauticianName != null">
                beautician_name = #{record.beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.tradeType != null">
                trade_type = #{record.tradeType,jdbcType=INTEGER},
            </if>
            <if test="record.payTime != null">
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.tradeStatus != null">
                trade_status = #{record.tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="record.totalAmount != null">
                total_amount = #{record.totalAmount,jdbcType=INTEGER},
            </if>
            <if test="record.discountsAmount != null">
                discounts_amount = #{record.discountsAmount,jdbcType=INTEGER},
            </if>
            <if test="record.productPrice != null">
                product_price = #{record.productPrice,jdbcType=INTEGER},
            </if>
            <if test="record.productDiscount != null">
                product_discount = #{record.productDiscount,jdbcType=INTEGER},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.cardPrice != null">
                card_price = #{record.cardPrice,jdbcType=INTEGER},
            </if>
            <if test="record.cardDiscount != null">
                card_discount = #{record.cardDiscount,jdbcType=INTEGER},
            </if>
            <if test="record.cardName != null">
                card_name = #{record.cardName,jdbcType=VARCHAR},
            </if>
            <if test="record.actualPay != null">
                actual_pay = #{record.actualPay,jdbcType=INTEGER},
            </if>
            <if test="record.incentive != null">
                incentive = #{record.incentive,jdbcType=INTEGER},
            </if>
            <if test="record.memberDeduct != null">
                member_deduct = #{record.memberDeduct,jdbcType=INTEGER},
            </if>
            <if test="record.netAmount != null">
                net_amount = #{record.netAmount,jdbcType=INTEGER},
            </if>
            <if test="record.payMethod != null">
                pay_method = #{record.payMethod,jdbcType=INTEGER},
            </if>
            <if test="record.payRate != null">
                pay_rate = #{record.payRate,jdbcType=INTEGER},
            </if>
            <if test="record.settleAmount != null">
                settle_amount = #{record.settleAmount,jdbcType=INTEGER},
            </if>
            <if test="record.reimburseAmount != null">
                reimburse_amount = #{record.reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="record.settlementTime != null">
                settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reimburseTime != null">
                reimburse_time = #{record.reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.withdrawAmount != null">
                withdraw_amount = #{record.withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="record.statisticsYear != null">
                statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="record.statisticsYearMonth != null">
                statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update store_trade_detail
        set id = #{record.id,jdbcType=INTEGER},
        store_id = #{record.storeId,jdbcType=INTEGER},
        settlement_status = #{record.settlementStatus,jdbcType=INTEGER},
        beautician_id = #{record.beauticianId,jdbcType=INTEGER},
        store_phone = #{record.storePhone,jdbcType=VARCHAR},
        store_name = #{record.storeName,jdbcType=VARCHAR},
        beautician_name = #{record.beauticianName,jdbcType=VARCHAR},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        trade_type = #{record.tradeType,jdbcType=INTEGER},
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
        trade_status = #{record.tradeStatus,jdbcType=INTEGER},
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
        discounts_amount = #{record.discountsAmount,jdbcType=INTEGER},
        product_price = #{record.productPrice,jdbcType=INTEGER},
        product_discount = #{record.productDiscount,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        card_price = #{record.cardPrice,jdbcType=INTEGER},
        card_discount = #{record.cardDiscount,jdbcType=INTEGER},
        card_name = #{record.cardName,jdbcType=VARCHAR},
        actual_pay = #{record.actualPay,jdbcType=INTEGER},
        incentive = #{record.incentive,jdbcType=INTEGER},
        member_deduct = #{record.memberDeduct,jdbcType=INTEGER},
        net_amount = #{record.netAmount,jdbcType=INTEGER},
        pay_method = #{record.payMethod,jdbcType=INTEGER},
        pay_rate = #{record.payRate,jdbcType=INTEGER},
        settle_amount = #{record.settleAmount,jdbcType=INTEGER},
        reimburse_amount = #{record.reimburseAmount,jdbcType=INTEGER},
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
        reimburse_time = #{record.reimburseTime,jdbcType=TIMESTAMP},
        withdraw_amount = #{record.withdrawAmount,jdbcType=INTEGER},
        statistics_year = #{record.statisticsYear,jdbcType=VARCHAR},
        statistics_year_month = #{record.statisticsYearMonth,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail">
        update store_trade_detail
        <set>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="beauticianId != null">
                beautician_id = #{beauticianId,jdbcType=INTEGER},
            </if>
            <if test="settlementStatus != null">
                settlement_status = #{settlementStatus,jdbcType=INTEGER},
            </if>
            <if test="storePhone != null">
                store_phone = #{storePhone,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null">
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="beauticianName != null">
                beautician_name = #{beauticianName,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="tradeType != null">
                trade_type = #{tradeType,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tradeStatus != null">
                trade_status = #{tradeStatus,jdbcType=INTEGER},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="discountsAmount != null">
                discounts_amount = #{discountsAmount,jdbcType=INTEGER},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=INTEGER},
            </if>
            <if test="productDiscount != null">
                product_discount = #{productDiscount,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="cardPrice != null">
                card_price = #{cardPrice,jdbcType=INTEGER},
            </if>
            <if test="cardDiscount != null">
                card_discount = #{cardDiscount,jdbcType=INTEGER},
            </if>
            <if test="cardName != null">
                card_name = #{cardName,jdbcType=VARCHAR},
            </if>
            <if test="actualPay != null">
                actual_pay = #{actualPay,jdbcType=INTEGER},
            </if>
            <if test="incentive != null">
                incentive = #{incentive,jdbcType=INTEGER},
            </if>
            <if test="memberDeduct != null">
                member_deduct = #{memberDeduct,jdbcType=INTEGER},
            </if>
            <if test="netAmount != null">
                net_amount = #{netAmount,jdbcType=INTEGER},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod,jdbcType=INTEGER},
            </if>
            <if test="payRate != null">
                pay_rate = #{payRate,jdbcType=INTEGER},
            </if>
            <if test="settleAmount != null">
                settle_amount = #{settleAmount,jdbcType=INTEGER},
            </if>
            <if test="reimburseAmount != null">
                reimburse_amount = #{reimburseAmount,jdbcType=INTEGER},
            </if>
            <if test="settlementTime != null">
                settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
            </if>
            <if test="reimburseTime != null">
                reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount = #{withdrawAmount,jdbcType=INTEGER},
            </if>
            <if test="statisticsYear != null">
                statistics_year = #{statisticsYear,jdbcType=VARCHAR},
            </if>
            <if test="statisticsYearMonth != null">
                statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail">
        update store_trade_detail
        set store_id = #{storeId,jdbcType=INTEGER},
        beautician_id = #{beauticianId,jdbcType=INTEGER},
        settlement_status = #{settlementStatus,jdbcType=INTEGER},
        store_phone = #{storePhone,jdbcType=VARCHAR},
        store_name = #{storeName,jdbcType=VARCHAR},
        beautician_name = #{beauticianName,jdbcType=VARCHAR},
        order_no = #{orderNo,jdbcType=VARCHAR},
        trade_type = #{tradeType,jdbcType=INTEGER},
        pay_time = #{payTime,jdbcType=TIMESTAMP},
        trade_status = #{tradeStatus,jdbcType=INTEGER},
        total_amount = #{totalAmount,jdbcType=INTEGER},
        discounts_amount = #{discountsAmount,jdbcType=INTEGER},
        product_price = #{productPrice,jdbcType=INTEGER},
        product_discount = #{productDiscount,jdbcType=INTEGER},
        product_name = #{productName,jdbcType=VARCHAR},
        card_price = #{cardPrice,jdbcType=INTEGER},
        card_discount = #{cardDiscount,jdbcType=INTEGER},
        card_name = #{cardName,jdbcType=VARCHAR},
        actual_pay = #{actualPay,jdbcType=INTEGER},
        incentive = #{incentive,jdbcType=INTEGER},
        member_deduct = #{memberDeduct,jdbcType=INTEGER},
        net_amount = #{netAmount,jdbcType=INTEGER},
        pay_method = #{payMethod,jdbcType=INTEGER},
        pay_rate = #{payRate,jdbcType=INTEGER},
        settle_amount = #{settleAmount,jdbcType=INTEGER},
        reimburse_amount = #{reimburseAmount,jdbcType=INTEGER},
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
        reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP},
        withdraw_amount = #{withdrawAmount,jdbcType=INTEGER},
        statistics_year = #{statisticsYear,jdbcType=VARCHAR},
        statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        remarks = #{remarks,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM store_trade_detail LIMIT #{offset},#{limit}
    </select>
    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from store_trade_detail
        <where>
            <if test="storeId != null">
                and store_id = #{storeId,jdbcType=INTEGER}
            </if>
            <if test="settlementStatus != null">
                and settlement_status = #{settlementStatus,jdbcType=INTEGER}
            </if>
            <if test="beauticianId != null">
                and beautician_id = #{beauticianId,jdbcType=INTEGER}
            </if>
            <if test="storePhone != null">
                and store_phone = #{storePhone,jdbcType=VARCHAR}
            </if>
            <if test="storeName != null">
                and store_name = #{storeName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianName != null">
                and beautician_name = #{beauticianName,jdbcType=VARCHAR}
            </if>
            <if test="orderNo != null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="tradeType != null">
                and trade_type = #{tradeType,jdbcType=INTEGER}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="tradeStatus != null">
                and trade_status = #{tradeStatus,jdbcType=INTEGER}
            </if>
            <if test="totalAmount != null">
                and total_amount = #{totalAmount,jdbcType=INTEGER}
            </if>
            <if test="discountsAmount != null">
                and discounts_amount = #{discountsAmount,jdbcType=INTEGER}
            </if>
            <if test="productPrice != null">
                and product_price = #{productPrice,jdbcType=INTEGER}
            </if>
            <if test="productDiscount != null">
                and product_discount = #{productDiscount,jdbcType=INTEGER}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
            <if test="cardPrice != null">
                and card_price = #{cardPrice,jdbcType=INTEGER}
            </if>
            <if test="cardDiscount != null">
                and card_discount = #{cardDiscount,jdbcType=INTEGER}
            </if>
            <if test="cardName != null">
                and card_name = #{cardName,jdbcType=VARCHAR}
            </if>
            <if test="actualPay != null">
                and actual_pay = #{actualPay,jdbcType=INTEGER}
            </if>
            <if test="incentive != null">
                and incentive = #{incentive,jdbcType=INTEGER}
            </if>
            <if test="memberDeduct != null">
                and member_deduct = #{memberDeduct,jdbcType=INTEGER}
            </if>
            <if test="netAmount != null">
                and net_amount = #{netAmount,jdbcType=INTEGER}
            </if>
            <if test="payMethod != null">
                and pay_method = #{payMethod,jdbcType=INTEGER}
            </if>
            <if test="payRate != null">
                and pay_rate = #{payRate,jdbcType=INTEGER}
            </if>
            <if test="settleAmount != null">
                and settle_amount = #{settleAmount,jdbcType=INTEGER}
            </if>
            <if test="reimburseAmount != null">
                and reimburse_amount = #{reimburseAmount,jdbcType=INTEGER}
            </if>
            <if test="settlementTime != null">
                and settlement_time = #{settlementTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reimburseTime != null">
                and reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP}
            </if>
            <if test="withdrawAmount != null">
                and withdraw_amount = #{withdrawAmount,jdbcType=INTEGER}
            </if>
            <if test="statisticsYear != null">
                and statistics_year = #{statisticsYear,jdbcType=VARCHAR}
            </if>
            <if test="statisticsYearMonth != null">
                and statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectByOrderNoTradeType" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from store_trade_detail
        <where>
            <if test="storeId != null">
                and store_id = #{storeId,jdbcType=INTEGER}
            </if>
            <if test="settlementStatus != null">
                and settlement_status = #{settlementStatus,jdbcType=INTEGER}
            </if>
            <if test="beauticianId != null">
                and beautician_id = #{beauticianId,jdbcType=INTEGER}
            </if>
            <if test="storePhone != null">
                and store_phone = #{storePhone,jdbcType=VARCHAR}
            </if>
            <if test="storeName != null">
                and store_name = #{storeName,jdbcType=VARCHAR}
            </if>
            <if test="beauticianName != null">
                and beautician_name = #{beauticianName,jdbcType=VARCHAR}
            </if>
            <if test="orderNo != null">
                and order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="tradeType != null">
                and trade_type = #{tradeType,jdbcType=INTEGER}
            </if>
            <if test="payTime != null">
                and pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="tradeStatus != null">
                and trade_status = #{tradeStatus,jdbcType=INTEGER}
            </if>
            <if test="totalAmount != null">
                and total_amount = #{totalAmount,jdbcType=INTEGER}
            </if>
            <if test="discountsAmount != null">
                and discounts_amount = #{discountsAmount,jdbcType=INTEGER}
            </if>
            <if test="productPrice != null">
                and product_price = #{productPrice,jdbcType=INTEGER}
            </if>
            <if test="productDiscount != null">
                and product_discount = #{productDiscount,jdbcType=INTEGER}
            </if>
            <if test="productName != null">
                and product_name = #{productName,jdbcType=VARCHAR}
            </if>
            <if test="cardPrice != null">
                and card_price = #{cardPrice,jdbcType=INTEGER}
            </if>
            <if test="cardDiscount != null">
                and card_discount = #{cardDiscount,jdbcType=INTEGER}
            </if>
            <if test="cardName != null">
                and card_name = #{cardName,jdbcType=VARCHAR}
            </if>
            <if test="actualPay != null">
                and actual_pay = #{actualPay,jdbcType=INTEGER}
            </if>
            <if test="incentive != null">
                and incentive = #{incentive,jdbcType=INTEGER}
            </if>
            <if test="memberDeduct != null">
                and member_deduct = #{memberDeduct,jdbcType=INTEGER}
            </if>
            <if test="netAmount != null">
                and net_amount = #{netAmount,jdbcType=INTEGER}
            </if>
            <if test="payMethod != null">
                and pay_method = #{payMethod,jdbcType=INTEGER}
            </if>
            <if test="payRate != null">
                and pay_rate = #{payRate,jdbcType=INTEGER}
            </if>
            <if test="settleAmount != null">
                and settle_amount = #{settleAmount,jdbcType=INTEGER}
            </if>
            <if test="reimburseAmount != null">
                and reimburse_amount = #{reimburseAmount,jdbcType=INTEGER}
            </if>
            <if test="settlementTime != null">
                and settlement_time = #{settlementTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reimburseTime != null">
                and reimburse_time = #{reimburseTime,jdbcType=TIMESTAMP}
            </if>
            <if test="withdrawAmount != null">
                and withdraw_amount = #{withdrawAmount,jdbcType=INTEGER}
            </if>
            <if test="statisticsYear != null">
                and statistics_year = #{statisticsYear,jdbcType=VARCHAR}
            </if>
            <if test="statisticsYearMonth != null">
                and statistics_year_month = #{statisticsYearMonth,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
        </where>
        limit 1
    </select>

    <!--统计店铺数据-->
    <select id="selectStoreListByConditions"  resultType="com.union.aimei.common.model.financial.StoreTradeStatistics">
        SELECT
            *
        FROM
            (
            SELECT
                std.store_id AS storeId,
                IFNULL( COUNT( std.order_no ) , 0 ) AS monthlyOrderQuantity,
                IFNULL( SUM( std.total_amount ) , 0 ) AS totalSalesThisMonth,
                IFNULL( SUM( std.net_amount ) , 0 ) AS onNetIncome ,
                IFNULL( SUM( std.actual_pay ) , 0 ) AS serviceOrderAmount
            FROM
                store_trade_detail std
            WHERE
                std.settlement_time <include refid="settlementTimeBetweenSql"/>
                AND std.trade_status = 1
                AND std.trade_type = 1
                AND std.settlement_status = 0
            GROUP BY
                std.store_id
            ) tmp1
            LEFT JOIN (
            SELECT
                std.store_id AS storeId,
                IFNULL( COUNT( std.trade_status ) , 0 ) AS serviceOrder
            FROM
                store_trade_detail std
            WHERE
                std.trade_type = 1
                AND std.settlement_status = 0
                AND std.settlement_time <include refid="settlementTimeBetweenSql"/>
            GROUP BY
                std.store_id,
                std.statistics_year_month
            ) tmp2 ON tmp1.storeId = tmp2.storeId
            LEFT JOIN (
            SELECT
                std.store_id AS storeId,
                IFNULL( COUNT( std.trade_status ), 0 ) AS orderCompleted,
                IFNULL( SUM( std.actual_pay ), 0 ) AS orderCompletedAamount
            FROM
                store_trade_detail std
            WHERE
                std.trade_status = 1
                AND std.trade_type = 1
                AND std.settlement_status = 0
                AND std.settlement_time <include refid="settlementTimeBetweenSql"/>
            GROUP BY
                std.store_id
            ) tmp3 ON tmp1.storeId = tmp3.storeId
            LEFT JOIN (
            SELECT
                std.store_id AS storeId,
                IFNULL( COUNT( std.trade_type ), 0 ) AS refundOrder,
                IFNULL( SUM( std.reimburse_amount ), 0 ) AS refundOrderAmount
            FROM
                store_trade_detail std
            WHERE
                std.trade_status = 1
                AND std.trade_type = 3
                AND std.reimburse_time <include refid="settlementTimeBetweenSql"/>
            GROUP BY
                std.store_id
            ) tmp4 ON tmp1.storeId = tmp4.storeId
            LEFT JOIN (
            SELECT
                std.store_id AS storeId,
                IFNULL( COUNT( std.trade_type ) , 0 ) AS cardNumber,
                IFNULL( SUM( std.incentive ) , 0 ) AS sellCardRewards
            FROM
                store_trade_detail std
            WHERE
                std.trade_status = 1
                AND std.trade_type = 2
                AND std.settlement_time <include refid="settlementTimeBetweenSql"/>
            GROUP BY
            std.store_id
            ) tmp5 ON tmp1.storeId = tmp5.storeId
    </select>

    <update id="updateBatch" parameterType="com.union.aimei.common.model.financial.StoreTradeDetail">
        update store_trade_detail
        set settlement_status = 1
        where trade_status = 1
        and trade_type = 1
        and store_id = #{storeId}
    </update>

</mapper>