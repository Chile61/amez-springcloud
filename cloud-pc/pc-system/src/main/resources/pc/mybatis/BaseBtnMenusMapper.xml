<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.union.aimei.pc.system.mapper.BaseBtnMenusMapper">
    <resultMap id="BaseResultMap" type="com.union.aimei.common.model.system.BaseBtnMenus">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="btn_name" jdbcType="VARCHAR" property="btnName"/>
        <result column="btn_desc" jdbcType="VARCHAR" property="btnDesc"/>
        <result column="btn_code" jdbcType="INTEGER" property="btnCode"/>
        <result column="btn_index" jdbcType="INTEGER" property="btnIndex"/>
        <result column="oper_code" jdbcType="VARCHAR" property="operCode"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, btn_name, btn_desc, btn_code, btn_index, oper_code, create_time, update_time,
        remarks
    </sql>
    <select id="selectByExample" parameterType="com.union.aimei.common.model.system.BaseBtnMenusExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_btn_menus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_btn_menus
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from base_btn_menus
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.union.aimei.common.model.system.BaseBtnMenusExample">
        delete from base_btn_menus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.union.aimei.common.model.system.BaseBtnMenus">
        insert into base_btn_menus (id, btn_name, btn_desc,
        btn_code, btn_index, oper_code,
        create_time, update_time, remarks
        )
        values (#{id,jdbcType=INTEGER}, #{btnName,jdbcType=VARCHAR}, #{btnDesc,jdbcType=VARCHAR},
        #{btnCode,jdbcType=INTEGER}, #{btnIndex,jdbcType=INTEGER}, #{operCode,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.union.aimei.common.model.system.BaseBtnMenus">
        insert into base_btn_menus
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="btnName != null">
                btn_name,
            </if>
            <if test="btnDesc != null">
                btn_desc,
            </if>
            <if test="btnCode != null">
                btn_code,
            </if>
            <if test="btnIndex != null">
                btn_index,
            </if>
            <if test="operCode != null">
                oper_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="btnName != null">
                #{btnName,jdbcType=VARCHAR},
            </if>
            <if test="btnDesc != null">
                #{btnDesc,jdbcType=VARCHAR},
            </if>
            <if test="btnCode != null">
                #{btnCode,jdbcType=INTEGER},
            </if>
            <if test="btnIndex != null">
                #{btnIndex,jdbcType=INTEGER},
            </if>
            <if test="operCode != null">
                #{operCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.union.aimei.common.model.system.BaseBtnMenusExample"
            resultType="java.lang.Long">
        select count(*) from base_btn_menus
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update base_btn_menus
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.btnName != null">
                btn_name = #{record.btnName,jdbcType=VARCHAR},
            </if>
            <if test="record.btnDesc != null">
                btn_desc = #{record.btnDesc,jdbcType=VARCHAR},
            </if>
            <if test="record.btnCode != null">
                btn_code = #{record.btnCode,jdbcType=INTEGER},
            </if>
            <if test="record.btnIndex != null">
                btn_index = #{record.btnIndex,jdbcType=INTEGER},
            </if>
            <if test="record.operCode != null">
                oper_code = #{record.operCode,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update base_btn_menus
        set id = #{record.id,jdbcType=INTEGER},
        btn_name = #{record.btnName,jdbcType=VARCHAR},
        btn_desc = #{record.btnDesc,jdbcType=VARCHAR},
        btn_code = #{record.btnCode,jdbcType=INTEGER},
        btn_index = #{record.btnIndex,jdbcType=INTEGER},
        oper_code = #{record.operCode,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.union.aimei.common.model.system.BaseBtnMenus">
        update base_btn_menus
        <set>
            <if test="btnName != null">
                btn_name = #{btnName,jdbcType=VARCHAR},
            </if>
            <if test="btnDesc != null">
                btn_desc = #{btnDesc,jdbcType=VARCHAR},
            </if>
            <if test="btnCode != null">
                btn_code = #{btnCode,jdbcType=INTEGER},
            </if>
            <if test="btnIndex != null">
                btn_index = #{btnIndex,jdbcType=INTEGER},
            </if>
            <if test="operCode != null">
                oper_code = #{operCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.union.aimei.common.model.system.BaseBtnMenus">
        update base_btn_menus
        set btn_name = #{btnName,jdbcType=VARCHAR},
        btn_desc = #{btnDesc,jdbcType=VARCHAR},
        btn_code = #{btnCode,jdbcType=INTEGER},
        btn_index = #{btnIndex,jdbcType=INTEGER},
        oper_code = #{operCode,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        remarks = #{remarks,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_btn_menus LIMIT #{offset},#{limit}
    </select>
    <select id="selectListByConditions" parameterType="com.union.aimei.common.model.system.BaseBtnMenus"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_btn_menus
        <where>
            <if test="btnName != null">
                and btn_name = #{btnName,jdbcType=VARCHAR}
            </if>
            <if test="btnDesc != null">
                and btn_desc = #{btnDesc,jdbcType=VARCHAR}
            </if>
            <if test="btnCode != null">
                and btn_code = #{btnCode,jdbcType=INTEGER}
            </if>
            <if test="btnIndex != null">
                and btn_index = #{btnIndex,jdbcType=INTEGER}
            </if>
            <if test="operCode != null">
                and oper_code = #{operCode,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="remarks != null">
                and remarks = #{remarks,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>